#!/usr/bin/env zsh
set -eo pipefail

# Adapted From: https://askubuntu.com/a/15856/1058868
if [[ $EUID -ne 0 ]]; then
    root="~"
    ylv="$root/ylv/ylv"
else
    root=""
    ylv="$root/ylv/ylv su"
fi

chmod +x $ylv

source $root/resources/functions

inAndroid {
    termux-setup-storage
    pkg install emacs make fd cmake sqlite libtool man
}

GIT_SSL_NO_VERIFY=1 $ylv submodule update --init --depth 1 --recursive --remote --force
git clone --recurse-submodule git@github.com:shadowrylander/shadowrylander.git $root/dross
$ylv remote set-url --push origin git@github.com:shadowrylander/shadowrylander.git
$ylv config include.path "$root/.gitconfig"

inRoot git chRun /installers/guix/etc/guix-install.sh

# Adapted From: https://askubuntu.com/a/15856/1058868
if [[ $(uname -a) != *Android* ]] && [[ $EUID -ne 0 ]]; then
    hash nix 2>/dev/null && {
        git chRun ~/installers/brew/install.sh
        git chRun ~/installers/nix/scripts/install.in --daemon
        . ~/.nix-profile/etc/profile.d/nix.sh
    } || :
    nix-channel --add https://github.com/nixos/nixpkgs/archive/master.tar.gz master
    nix-channel --update
    nix-env -iA master.nixUnstable
    nix-env -iA master.{emacs,gnumake,fd,cmake,sqlite,libtool,man}
fi

git tangle $root/{oreo.aiern,README}.org

notInRoot { make -f ~/.emacs.d/makefile ylv-init && git bootstrap }

# ln -s $(which xonsh) $PREFIX/usr/bin/xonsh
chsh -s $(which zsh)

. $root/.asdf/asdf.sh
asdf plugin add golang https://github.com/kennyp/asdf-golang.git
asdf install golang latest
asdf global golang latest

asdf plugin add nodejs https://github.com/asdf-vm/asdf-nodejs.git
asdf install nodejs latest
asdf global nodejs latest

go install github.com/CGamesPlay/git-remote-restic@latest
git config --global --add protocol.restic.allow always

go install github.com/charmbracelet/soft-serve/cmd/soft@latest

if [[ $(uname -a) == *Android* ]]; then
    termux-reload-settings
else
    inRoot {
        go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
        xcaddy build --with github.com/mholt/caddy-l4@latest \
                     --with github.com/abiosoft/caddy-yaml@latest \
                     --with github.com/caddy-dns/cloudflare@latest
        mv {.,/usr/bin}/caddy

        npm install -g wstunnel

        inUbuntu chRun /resources/rolling-rhino/rolling-rhino

        git chRun /etc/sv/stow-runit/run --bootstrap

        for prog in ufw runit et ddclient; do
            sudo systemctl enable --now $prog
        done
    }
fi
