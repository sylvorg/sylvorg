#!/usr/bin/env xonsh
import os, sys
from addict import Dict
currentDir = os.getcwd()
for line in $(yadm --help).split("\n"):
    if "yadm's Git repository" in line:
        yadmRepoDir = os.path.expandvars(line.split()[0].strip())

# Adapted From:
# Answer: https://stackoverflow.com/a/957978/10827766
# User: https://stackoverflow.com/users/10738/baudtack
yadmRootDir = $(git -C @(yadmRepoDir) rev-parse --show-toplevel).strip()

if len(sys.argv) > 1:
    command = sys.argv[1]
    repoDir = yadmRepoDir if command == "yadm" else currentDir
else:
    if yadmRootDir == currentDir:
        repoDir = yadmRepoDir
        command = "yadm"
    else:
        repoDir = currentDir
        command = f"git -C {currentDir}".split()

# Adapted From:
# Answer: https://stackoverflow.com/a/12142066/10827766
# User: https://stackoverflow.com/users/1426193/jistanidiot
currentBranch = $(@(command) rev-parse --abbrev-ref HEAD).strip()
mainBranch = "main" if currentBranch == "HEAD" else currentBranch
masterBranch = "master" if currentBranch == "HEAD" else currentBranch
git pull origin @(mainBranch) || git pull origin @(masterBranch)

_submodules = [line.strip() for line in $(cat .gitmodules).split("\n") if line]
submodule = None
submodules = Dict()
for line in _submodules:
    if '[submodule "' in line:
        submodule = line.split('"')[1]
        submodules[submodule] = Dict()
    elif not submodule:
        pass
    else:
        splitLine = line.split(" = ")
        submodules[submodule][splitLine[0]] = splitLine[1]

for submodule, subdict in submodules.items():
    subpath = os.path.join(currentDir, subdict.path)
    
    # Adapted From:
    # Answer: https://stackoverflow.com/a/66481406/10827766
    # User: https://stackoverflow.com/users/1434495/flair
    if (os.path.exists(subpath) and (not any(os.scandir(subpath)))) or (not os.path.exists(subpath)):

        @(command) submodule add --force --depth 1 @(subdict.url) @(subdict.path) --name @(submodule)
