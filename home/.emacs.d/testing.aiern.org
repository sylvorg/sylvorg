#+setupfile: ./README.org
#+include: ./README.org

# ##################################################################################################

# Adapted From: https://writequit.org/denver-emacs/presentations/files/example.org.html

This is the example org-mode file used for the Denver Emacs org-mode
introduction talk. Everything in this talk should work without any custom
settings or installation with a reasonably recent Emacs version.

Let's start with a headline, this is kind of like Markdown's =#= character:

* This is an example headline

Text can be put into the headline. You can create another headline at the same
level with another * character

* Another headline
Nesting headlines is as easy as adding another start

** Nested headline

** Another nested headline

*** Deeper

** Another headline
**** Deeper...

***** Deeper.....

* Basic markup

You can really go as deep as you want. This is the general building block for
org-mode navigation.

Next, let's talk about some markup

- _underscores let you underline things_
- *stars add emphasis*
- /slashes are italics/
- +pluses are strikethrough+
- =equal signs are verbatim text=
- ~tildes can also be used~

You can generate lists with the =-= character (seen above), or create numbered
ones:

1. Number one thing
2. Number two thing
3. Number three

* Showing and hiding headlines

You can hide the contents of a headline by putting the point (cursor) or it and
hitting =TAB=.

You can also toggle hiding and showing of *all* headlines with =SHIFT-TAB=.

* Tables

Auto expanding tables are one of the coolest features of org-mode, because
tables in Markdown just plain suck. In order to create a new table, you can
start typing it manually, or press =C-c |=, which will prompt for the table's
dimensions.

| First Name                 | Last Name           | Years using Emacs |
|----------------------------+---------------------+-------------------|
| Lee                        | Hinman              |                 5 |
| Mike                       | Hunsinger           |                 2 |
| Daniel                     | Glauser             |                 4 |
| Really-long-first-name-guy | long-last-name-pers |                 1 |

* Org-mode links
:PROPERTIES:...

In an org-mode file, you can press =C-c l= to store a pointer to wherever you
are in the file. Then, with (or without) text highlighted hit =C-C C-l= to make
it into a link.
The example file for Magit
If you don't want to store a pointer (ie, link to a website or something), you
can just hit =C-c C-l= and type or paste the link. To manually create a link, do
something like:

The Denver Emacs Meetup Group

Writequit site

Google's web site

(ignore the *_SRC blocks for now, we'll get there)

#+BEGIN_SRC fundamental
[[http://google.com/][Google]]
#+END_SRC

You can link to files, images, websites, emails, irc, and all kinds of things.

* Various things you can add in headers

One of the most common uses for org-mode is a sort of "task list" or TODO list.
Org-mode supports this by allowing markers in the headline for the state of a
task. Let's look at an example:

** TODO This is a task that needs doing

** TODO Another todo task
- [ ] sub task one
- [X] sub task two
- [ ] sub task three

** Learn about org-mode

*** TODO learn todos

*** TODO learn other stuff

You can toggle each task in a list with the =C-c C-c= keyboard shortcut.

** DONE I've already finished this one

You can change the status of a task by hitting =C-c t= in the body of a task
anywhere, which will prompt for the state to put it in.

You can create as many of these as you'd like, for example (from my own config,
use what works best for you, configuring them is a little out of scope right
here) here's what I use:

*** TODO something that needs doing
*** DONE something that's already done
*** INPROGRESS something I'm currently doing
*** WAITING waiting for someone else before doing anything
*** NEEDSREVIEW there's a PR for this, it needs someone to look at it
*** HOLD this is in permanent hold until further notice
*** CANCELLED I don't need this any more
*** SOMEDAY I'd like to do this someday in the waaaaay off future

A lot of people just use "TODO" and "DONE" though.

** Adding tags and priorities

You can add tags by putting them surrounded in ":" in the headline.
Additionally, priorities

*** Headline with a tag                                                 :org:

*** Another tagged headline                                   :turing:denver:

*** Headline with multiple tags                                   :org:emacs:

Tags are just another way of organizing things.

*** [#A] Important task
*** [#B] Medium task 
*** [#C] Non-important task 

Again you can configure these, or just use the 3 built in ones.
*** TODO [1/3] Task with sub headlines
**** TODO Finish thing
**** TODO Finish that other thing
**** DONE Done with a thing

*** [33%] Task with sub headlines (percent cookie)
**** TODO Finish thing
**** TODO Finish that other thing
**** DONE Done with a thing

* The TODO-planner payoff
:PROPERTIES:...
So TODOs are all well and good, but what is a really neat feature is when you
can easily capture new TODOs and display them easily.

In order to do this, let's configure a couple of Emacs options in your emacs init:

#+BEGIN_SRC emacs-lisp
(require 'org)
;; Setup C-c c to capture new TODOs
(global-set-key (kbd "C-c c") 'org-capture)
;; Setup a key bind for the agenda
(global-set-key (kbd "C-c a") 'org-agenda)
;; Set up agenda to know about our file, you can use a list of files or
;; directories here
(setq org-agenda-files '("~/todo.org"))
;; A new template
(setq org-capture-templates
      '(("t" "Todo" entry (file "~/todo.org")
         "* TODO %?\n%U\n")))
#+END_SRC

Now, hit =C-c c= to bring up the capture template list, then =t= to capture a
new TODO item.

Once you've captured a few TODOs, you can try out the agenda by hitting =C-c a=,
which will prompt for what agenda you'd like to see, for now hit =t= to see the
TODO list agenda.

* Exporting an org-mode buffer

Org has a lot of export options, they are all contained behind a =C-c C-e=
export backend, exporting to HTML, markdown, plain text, pdf, etc.

* Show off other features of org-mode if we have more time
Maybe not in excruciating detail, but we can show off the power and cover it in
more detail at a later time:

- refiling (=org-refile=)
- source code blocks
- org-babel
- clocking in/out
- table formulas
- custom agenda views
- capturing notes (not just TODOs)
- publishing projects remotely via TRAMP

#+BEGIN_LaTeX
$a + b$
#+END_LaTeX

#+BEGIN_SRC emacs-lisp
(defun my/function ()
  "docstring"
  (interactive)
  (progn
    (+ 1 1)
    (message "Hi")))
#+END_SRC

#+BEGIN_SRC sh :results table :var data="1 2 3 4"
echo $data > /tmp/foo
for i in `cat /tmp/foo`; do
  echo $i
done
#+END_SRC

#+RESULTS:
| 1 |
| 2 |
| 3 |
| 4 |

#+NAME: say-hi
#+BEGIN_SRC sh
echo "hi"
#+END_SRC

#+NAME: hi
#+RESULTS: say-hi
: hi


#+BEGIN_SRC sh
# do some things
echo "stuff"
echo "more stuff"
echo <<hi>>
#+END_SRC

#+RESULTS:

To enter and edit a block of text, use =C-c C-'=

# ##################################################################################################

# Adapted From: https://raw.githubusercontent.com/novoid/github-orgmode-tests/master/README.org

#+TAGS: { FAILS(f) PARTLY(p) WORKS(w) example(e)}
#+EXPORT_EXCLUDE_TAGS: noexport

*Note:* a complete list of these features including keyboard
  shortcuts, links, and descriptions is available on
  https://github.com/novoid/github-orgmode-tests

This page demonstrates Org-mode features that are (or are not)
supported by github which is using an (old) version of [[https://github.com/wallyqs/org-ruby][org-ruby]].

Last GitHub feature render check and last table update: <2020-10-15 Thu> 

# FIXXME 2020-10-15: Following line causes my Org to display column view mode instead of re-generating the filtered table:
# :exclude-tags "example" 

#+BEGIN: columnview :id "Featuretest" :match "WORKS|FAILS|PARTLY" :format "%ITEM(Feature) %TAGS(status)"
| Feature                                                                           | status           |
|-----------------------------------------------------------------------------------+------------------|
| Text formatting                                                                   | :WORKS:          |
| Text formatting within other syntax elements                                      | :WORKS:          |
| Lists                                                                             | :PARTLY:         |
| Headings with TODO items                                                          | :FAILS:          |
| Drawers                                                                           | :FAILS:          |
| blocks ([[http://orgmode.org/org.html#Blocks][docu]])                                                                     | :PARTLY:         |
| EXAMPLE block                                                                     | :WORKS:          |
| QUOTE block                                                                       | :WORKS:          |
| VERSE block                                                                       | :FAILS:          |
| SRC block                                                                         | :WORKS:          |
| python                                                                            | :WORKS:          |
| shell                                                                             | :WORKS:          |
| ruby                                                                              | :WORKS:          |
| ditaa                                                                             | :WORKS:          |
| session with shell and R                                                          | :WORKS:          |
| QUOTE block                                                                       | :WORKS:          |
| HTML block                                                                        | :FAILS:          |
| LATEX block ([[http://orgmode.org/org.html#Embedded-LaTeX][docu]])                                                                | :FAILS:          |
| NOTES block                                                                       | :FAILS:          |
| comments ([[http://orgmode.org/manual/Comment-lines.html#Comment-lines][docu]])                                                                   | :WORKS:          |
| Noexport tag of heading                                                           | :WORKS:noexport: |
| links [[http://orgmode.org/org.html#Hyperlinks][(docu)]]                                                                      | :PARTLY:         |
| states; TODO items ([[http://orgmode.org/org.html#TODO-Items][docu]])                                                         | :PARTLY:         |
| tags [[http://orgmode.org/org.html#Tags][(docu)]]                                                                       | :FAILS:          |
| tables simple [[http://orgmode.org/org.html#Tables][(docu)]]                                                              | :PARTLY:         |
| tables complex ([[http://orgmode.org/org.html#The-spreadsheet][docu]], [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][tutorial]])                                                   | :PARTLY:         |
| column view ([[http://orgmode.org/org.html#Column-view][docu]])                                                                | :FAILS:          |
| dates & time ([[http://orgmode.org/org.html#Dates-and-Times][docu]])                                                               | :WORKS:          |
| clocking time ([[http://orgmode.org/org.html#Clocking-work-time][docu]])                                                              | :PARTLY:         |
#+END:

* Featuretest
:PROPERTIES:
:ID:       Featuretest
:END:
** Text formatting                                                                           :WORKS:

- *bold*
- /italic/
- _underline_
- +strike through+
- =code=
- ~commands~
- http://orgmode.org

: small example

** Text formatting within other syntax elements                                              :WORKS:
:PROPERTIES:
:CREATED:  [2020-12-21 Mon 12:13]
:END:

Within links:

[[http://orgmode.org][This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.]]

[[https://gnu.org][~gnu~]]

Table:

| Example                                                                           |
|-----------------------------------------------------------------------------------|
| http://orgmode.org                                                                |
| [[http://orgmode.org][Org mode]]                                                                          |
| This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~. |

Lists: 

- Example
  - This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.

Headings:

*** This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.

** Lists                                                            :PARTLY:

- MISSING:
  - Checkbox rendering/alignment
  - Reusing same enumerate bullet symbols (dash, numbers, ...)

simple list:
- Org mode
- Lists
- [ ] unchecked checkbox
- [X] checked checkbox
- [-] undecided checkbox (=C-u C-u C-c C-c=)

enumerate:
1. Emacs
2. Org-mode
3. Lists

mixed with checkboxes:

- Clean out garage
  1. [ ] get stuff out
     - [ ] be careful with that axe, Eugene
  2. [X] get rid of old stuff
     - using eBay?
     - try to use rubbish as birthday presents for family
  3. [ ] repaint garage
  4. [X] put stuff back in

** Headings with TODO items                                          :FAILS:

- MISSING
  - display of TODO keywords

*** TODO Clean out garage [0/4]

**** TODO get stuff out

- be careful with that axe, Eugene

**** TODO get rid of old stuff

- using eBay?
- try to use rubbish as birthday presents for family

**** TODO repaint garage

**** TODO put stuff back in

** Drawers                                                           :FAILS:

- MISSING:
  - rendering of drawers

*** NEXT Test with category property                                :mytag:
:PROPERTIES:
:CATEGORY: mycategory
:END:

** blocks ([[http://orgmode.org/org.html#Blocks][docu]])                                                                            :PARTLY:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:18]
:END:

- including babel ([[http://orgmode.org/org.html#Library-of-Babel][docu]])

*** EXAMPLE block                                                                           :WORKS:

#+BEGIN_EXAMPLE
An example in an EXAMPLE block.
Second line within this block.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_EXAMPLE

*** QUOTE block                                                                             :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:51]
:END:

Will be wrapped:

#+BEGIN_QUOTE
An example in an QUOTE block.
Second line within this block.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_QUOTE

*** VERSE block                                                                             :FAILS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:52]
:END:

- MISSING:
  - rendering of the block

#+BEGIN_VERSE
An example in an VERSE block.
Second line within this block.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_VERSE

*** SRC block                                                                               :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:52]
:END:

**** python                                                                                :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 12:02]
:END:

#+BEGIN_SRC python
  def my_test(myvar: str = 'foo bar'):
      """
      This is an example function.

      @type  myvar: str = 'foo bar': number
      @param myvar: str = 'foo bar': FIXXME
      """

      mynewvar: str = myvar + ' additional content'
      return mynewvar

  print("Hello " + my_text('Europe!'))
#+END_SRC

#+BEGIN_SRC emacs-lisp
(message (concat "Hello" "Europe!")) ;; inline comment
#+END_SRC


- some examples are taken from [[http://orgmode.org/worg/org-contrib/babel/intro.html][Worg: Introduction to Babel]]

**** shell                                                                                 :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:59]
:END:

#+BEGIN_SRC sh
echo "Hello Europe!"
FOO="foo bar"
echo "A test with ${FOO}"
pwd
#+END_SRC

**** ruby                                                                                  :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:59]
:END:

#+begin_src ruby
require 'date'
"This file was last evaluated on #{Date.today}"
#+end_src

**** ditaa                                                                                 :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:59]
:END:

#+begin_src ditaa :file blue.png :cmdline -r
  +---------+
  | cBLU    |
  |         |
  |    +----+
  |    |cPNK|
  |    |    |
  +----+----+
#+end_src

**** session with shell and R                                                              :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:59]
:END:

#+name: directories
#+begin_src sh :results replace
  cd ~/archive/events_memories && du -sc * |grep -v total
#+end_src

Using result set "directories" from above as "dirs" in R below:

#+name: directory-pie-chart(dirs = directories)
#+begin_src R :session R-pie-example :file ./dirs.png
  pie(dirs[,1], labels = dirs[,2])
#+end_src

*** QUOTE block                                                                             :WORKS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:52]
:END:

Will be wrapped:

#+BEGIN_QUOTE
An example in an QUOTE block.
Second line within this block.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_QUOTE

*** HTML block                                                                              :FAILS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:52]
:END:

- MISSING:
  - rendering of the block

#+BEGIN_HTML
<p>
This is a paragraph with
<a href="https://Karl-Voit.at">a link</a>
within.
</p>
#+END_HTML

*** LATEX block ([[http://orgmode.org/org.html#Embedded-LaTeX][docu]])                                                                      :FAILS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:53]
:END:

- MISSING:
  - rendering of the block
  - some special characters

- Greek characters  
  - Working outside of block: \alpha \beta \phi
  - not working: \LaTeX{}  $\varphi$

#+BEGIN_LATEX
\section{Section Title}

This is \emph{emphasized} and $y=x^2$ is an equation.

An example in an LATEX block.
Another line within this block.

\alpha $x=42y$

Greek characters \alpha \beta \phi \LaTeX{}  $\varphi$
#+END_LATEX

*** NOTES block                                                                             :FAILS:
:PROPERTIES:
:CREATED:  [2020-10-15 Thu 11:53]
:END:

- MISSING:
  - rendering of the block

Notes blocks are *not standard Org mode*. However, =org-reveal= is using
it for handout notes so I would like to include it here.

#+BEGIN_NOTES
An example in an NOTES block.
Second line within this block.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_NOTES

** comments ([[http://orgmode.org/manual/Comment-lines.html#Comment-lines][docu]])                                                                           :WORKS:

Comment lines:

space hash space:

 # This is a comment

space space hash space:

  # This is a comment

-----------

Comment block:

#+BEGIN_COMMENT
This is a multi line comment block.
This is the second line.

This is the second paragraph.

This *is* an /example/ of _some_ syntax +highlighting+ within =links= and ~such~.
#+END_COMMENT

** Noexport tag of heading                                                          :WORKS:noexport:

The document needs to explicitly set the tag used for no export, as is done at
the top of this document (it's set to ~noexport~).

Tagging a heading with the tag hides the section when opening the on the site.

This whole heading is omitted from being rendered on GitHub.

** links [[http://orgmode.org/org.html#Hyperlinks][(docu)]]                                                      :PARTLY:

- MISSING:
  - =<<link>>=
  - following =id:= links
  - custom links
    - without your Emacs config, those links are impossible to follow
    - rendering somehow would be fine
  - footnotes

todo: target
: # <<link>>

- id:myexampleid
- [[file:~/.zshrc.local]]
- http://orgmode.org
  - [[http://orgmode.org/org.html#External-links][docu: list of external links]]
- custom links: [[contact:John%20Smith][contact:John Smith]]
  - [[http://orgmode.org/org.html#Link-abbreviations][docu: link abbrevations]]

- footnotes ([[http://orgmode.org/org.html#Footnotes][docu]])
  - plain          [fn::great content here]
  - with own label [fn:mylabel:great content here]
  - reference      [fn:myotherlabel] [fn:2]

[fn:myotherlabel] This is a footnote from reference above.
[fn:2] This is a footnote with a simple number as label.

Footnotes aren't working

*** heading with PROPERTIES drawer containing ID
:PROPERTIES:
:ID: myexampleid
:END:
    Should have =#myexampleid= anchor, doesn't work as of =2021-04-11=

*** eading with PROPERTIES drawer containing CUSTOM_ID
:PROPERTIES:
:CUSTOM_ID: myexamplecustomid
:END:
    Should have =#myexamplecustomid= anchor, doesn't work as of =2021-04-11=

** states; TODO items ([[http://orgmode.org/org.html#TODO-Items][docu]])                                        :PARTLY:

- MISSING:
  - todo keywords
  - dependencies from within drawers

*** making dependencies explicit

**** example with chain siblings

***** NEXT buy bike
:PROPERTIES:
:TRIGGER: chain-siblings(NEXT)
:END:

***** take tour

***** goto hospital

*** priorities ([[http://orgmode.org/org.html#Priorities][docu]])

**** TODO [#A] example
**** NEXT [#B] example

*** breaking down in subtasks ([[http://orgmode.org/org.html#Breaking-down-tasks][docu]])

**** TODO example [1/3] [33%]
***** DONE subtask 1
***** TODO subtask 2
***** TODO subtask 3
** tags [[http://orgmode.org/org.html#Tags][(docu)]]                                                       :FAILS:

- MISSING:
  - rendering tags

*** example                                                           :tag:

** tables simple [[http://orgmode.org/org.html#Tables][(docu)]]                                             :PARTLY:

- MISSING:
  - number alignment

| *Heading1* | *head2* |
|------------+---------|
| entry      |      42 |
| foo        |    21.7 |
|------------+---------|
| end        |   99.99 |

** tables complex ([[http://orgmode.org/org.html#The-spreadsheet][docu]], [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][tutorial]])                                  :PARTLY:

- MISSING:
  - Tables are concatenated unfortunately and alignment fails.

#+TBLNAME: mydemo-USD-EUR-rate
| *US-Dollar* |      *EUR* |
|           1 | 0.76481836 |

|     *When* | *What*                 | *USD* | *EUR* |
|------------+------------------------+-------+-------|
| 2012-02-03 | Taxi Graz-Airport      |       | 18.00 |
| 2012-02-03 | Taxi Seattle Airport   | 25.00 | 19.12 |
| 2012-02-13 | Taxi                   |  7.00 |  5.35 |
| 2012-02-14 | Taxi                   |  8.00 |  6.12 |
| 2012-02-17 | Taxi to Airport SeaTac | 35.00 | 26.77 |
| 2012-02-22 | Taxi Airport-Graz      |       | 16.00 |
|------------+------------------------+-------+-------|
|            |                        |       | 91.36 |
#+TBLFM: @>$4=vsum(@I$4..@II$4);%.2f::@3$4=@3$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@4$4=@4$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@5$4=@5$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@6$4=@6$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f

** column view ([[http://orgmode.org/org.html#Column-view][docu]])                                                :FAILS:
:PROPERTIES:
:COLUMNS:  %25ITEM %TAGS %PRIORITY %TODO %10MyProperties
:MyProperties_ALL: "Thomas" "Maria" "Susan" "Joe"
:END:

- MISSING:
  - no support for those things

*** example sub-item                                               :mytag1:
:PROPERTIES:
:MyProperties: Susan
:END:

*** NEXT [#B] another example                                      :mytag2:
:PROPERTIES:
:MyProperties: Thomas
:END:

** dates & time ([[http://orgmode.org/org.html#Dates-and-Times][docu]])                                               :WORKS:

- ~C-c .~    *insert active* <2012-04-23 Mon>  (with ~C-u~: <2012-04-23 Mon 19:14>)
- ~C-c !~    insert inactive [2012-04-23 Mon]  (with ~C-u~: [2012-04-23 Mon 19:14])

** clocking time ([[http://orgmode.org/org.html#Clocking-work-time][docu]])                                             :PARTLY:

- MISSING:
  - drawer information

*** example sub-hierarchy with report

#+BEGIN: clocktable :maxlevel 2 :scope subtree
Clock summary at [2012-11-19 Mon 11:17]

| Headline     | Time    |
|--------------+---------|
| *Total time* | *27:16* |
|--------------+---------|
#+END:

**** example item
:LOGBOOK:
CLOCK: [2012-11-19 Mon 11:16]--[2012-11-19 Mon 11:17] =>  0:01
CLOCK: [2012-11-18 Sun 19:15]--[2012-11-18 Sun 19:23] =>  0:08
:END:

**** another item
:LOGBOOK:
CLOCK: [2012-11-18 Sun 19:26]--[2012-11-18 Sun 19:33] =>  0:07
CLOCK: [2012-11-17 Sat 16:25]--[2012-11-18 Sun 19:25] => 27:00
:END:


* MISC Ad-Hoc Testing

This sub-hierarchy is here to test specific stuff.

*You can ignore everything starting from here.*

** Headings

** heading with properties
:PROPERTIES:
:CREATED: <2011-10-09 Sun 15:16>
:END:

** tables

| *head1*               | *head2* | *head3* |
|-----------------------+---------+---------|
| text                  |      42 | -----   |
| me@server.example.com |      23 | :-)     |
|-----------------------+---------+---------|
|                       |      65 |         |
#+TBLFM: @>$2 = vsum(@I$2..@II$2)

** links

- direct URL: http://tagstore.org
- [[http://tagstore.org][indirect URL]]
- direct email: me@example.com
- [[me@server.com][indirect email]]
- [[file:README.org][file link]]
    should link to README.org
- [[file:README.org::#links][file + heading link]]
    should link to README.org#links -- used to work but was broken sometime after =2020-11-01=

** examples

verse:
#+begin_verse
This is an example.
    Second line.
Very long line with many characters showing the wordwrap feature or the not existing word wrap feature
#+end_verse

quote:
#+begin_quote
This is an example.
    Second line.
Very long line with many characters showing the wordwrap feature or the not existing word wrap feature
#+end_quote

only colon:
: This is an example.
:     Second line.
: Very long line with many characters showing the wordwrap feature or the not existing word wrap feature

non-specific source:
#+begin_src
This is an example.
    Second line.
Very long line with many characters showing the wordwrap feature or the not existing word wrap feature
#+end_src

python source:
#+begin_src python
if VALUE and dummy < 42:
    execute_something("Dummy text", 23)
#+end_src



** Underscores_like_this

- me_low
- 2_8
- ~*.org_archive~
- ~*.org\_archive~
- *.org\_archive

** Orgmode examples

Das hier ist eine Erklärung von dem Ganzen:

:conf: ;; this is ELISP code
:conf: (foo (bar))

Und in der Org-mode-Datei wird das dann so angewendet:

:org: :PROPERTIES:
:org: :ID: this-is-an-example
:org: :END:

# ##################################################################################################

# Adapted From: https://raw.githubusercontent.com/novoid/org-mode-workshop/master/featureshow/org-mode-teaser.org

# -*- mode: org; coding: utf-8; -*-
* Header Information                                               :noexport:
#+TITLE:     Org-mode Teaser Demo
#+AUTHOR:    Karl Voit
#+EMAIL:     tools@Karl-Voit.at
#+DATE:      2016-04-24
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:
#+LINK_HOME:
#+XSLT:

#+STARTUP: hidestars

#+STARTUP: overview   (or: showall, content, showeverything)
http://orgmode.org/org.html#Visibility-cycling  [[info:org#Visibility%20cycling][info:org#Visibility cycling]]

#+TODO: TODO(t) NEXT(n) STARTED(s) WAITING(w@/!) SOMEDAY(S!) | DONE(d!/!) CANCELLED(c@/!)
http://orgmode.org/org.html#Per_002dfile-keywords  [[info:org#Per-file%20keywords][info:org#Per-file keywords]]

#+TAGS: important(i) private(p)
#+TAGS: @HOME(h) @OFFICE(o)
http://orgmode.org/org.html#Setting-tags  [[info:org#Setting%20tags][info:org#Setting tags]]

#+NOstartup: beamer
#+NOLaTeX_CLASS: beamer
#+NOLaTeX_CLASS_OPTIONS: [bigger]
#+NOBEAMER_FRAME_LEVEL: 2

* Setting Up the Demo                                              :noexport:

- [ ] start key visualization tool like [[http://pabloseminario.com/projects/screenkey/][screenkey]]
- [ ] check font size
  - de/increase by ~S-Mousebutton1~
- [X] disable creation of PROPERTIES drawer containing CREATED timestamp:
  - M-: (org-expiry-deinsinuate)
  - see: Local Variables below


* Org-mode by Examples
:PROPERTIES:
:VISIBILITY: children
:END:

- This is a subset(!) of Org-mode basics to demonstrate the main
  features (sometimes probably more) of this wonderful tool

- Find the newest version of this document on
  [[https://github.com/novoid/org-mode-workshop]]


#+TBLNAME: key-legend
| *key* | *description*       |
|-------+---------------------|
| M     | Meta (often: Alt)   |
| C     | Ctrl                |
| S     | Shift               |
| TAB   | Tabulator           |
| RET   | Return, Enter, CRLF |
| UP    | arrow: up           |
| DOWN  | arrow: down         |
| LEFT  | arrow: left         |
| RIGHT | arrow: right        |
| SPC   | Space               |

** activating Org-mode

- http://orgmode.org/org.html#Activation
- http://orgmode.org/worg/org-configs/org-customization-guide.html

[[http://orgmode.org/worg/org-tutorials/orgtutorial_dto.html#sec-1-2][Activation of Org-mode (external Tutorial)]]:
#+BEGIN_SRC emacs-lisp
(add-to-list 'auto-mode-alist '("\\.\\(org\\|org_archive\\|txt\\)$" . org-mode))
(define-key global-map "\C-ca" 'org-agenda)     ;; by convention: "C-c a" opens agenda
(define-key global-map "\C-cc" 'org-capture)    ;; by convention: "C-c c" captures stuff
(define-key global-map "\C-cl" 'org-store-link) ;; by convention: "C-c l" stores a link to this heading
(setq org-log-done t) ;; if you want to log DONE-states to the :LOGBOOK:-drawer
#+END_SRC

- Org-mode *minor mode* (structure editing and lists) ~orgstruct-mode~
  ([[http://orgmode.org/org.html#Orgstruct-mode][docu]])

** Org-mode documentation

- http://orgmode.org/org.html is up to date
- ~C-h i~ (while being in an Org-mode file) gives you a local version :-)

*** In case of Org-mode documentation does not work

For using Org-mode from a local git repository: add following to your
configuration:

: (add-to-list 'Info-additional-directory-list "~/.emacs.d/<YOURDIRECTORY>/org-mode/doc/")

OR: install Org-mode documentation to your system with:

: cd $ORGMODEDIRECTORY && sudo make install-info

** text formatting syntax [[http://orgmode.org/org.html#Emphasis-and-monospace][(docu)]]

- *bold*
- /italic/
- _underline_
- +strike through+
- =code=
- ~commands~
- http://orgmode.org

: small example

#+COMMENT: this will never be exported

#+BEGIN_COMMENT
multi
line
comment
#+END_COMMENT

- not (yet) working and edge cases:
  - /*combination*/
  - */combination/*
  - _*combination*_
  - *_combination_*
  - =*combination*=
  - ~C:\a\very\old\DOS\path~
  - http://orgmode.org
  - [[http://orgmode.org][orgmode-Homepage]]
  - [[http://orgmode.org][*orgmode* /Homepage/]]

*** COMMENT no exported either

foo bar

** outlining ([[http://orgmode.org/org.html#Document-Structure][docu]])

- headlines start with asterisks
- levels
- visibility
  - ~TAB~      *visibility cycling*
  - ~S-TAB~    change buffer visibility
  - ~C-c C-r~  *reveal context*
  - per-file visibility ~#+STARTUP: overview~ and so on: ([[http://orgmode.org/org.html#Visibility-cycling][docu]])
  - ~C-u C-u TAB~ *restore startup visibility*
- motion
  - ~C-c C-n~   *next heading*
  - ~C-c C-p~   *previous heading*
  - ~C-c C-u~   one level up
  - ~C-c C-j~   jump (goto)
  - ~C-c C-f~   forward same level
  - ~C-c C-b~   backward same level
  - ~M-x org-goto~   nifty inerface for searching within an Org-mode buffer
- create basic elements
  - ~C-RET~     *new heading* below
- move elements
  - ~M-UP/DOWN~ *move up/down* with subitems
  - ~M-LEFT~    *promote*
  - ~M-RIGHT~   *demote*
  - ~M-S-LEFT/RIGHT~  promote/demote with subitems
- ~C-c C-c~  *toggle/modify* things ([[http://orgmode.org/org.html#The-very-busy-C_002dc-C_002dc-key][docu]])
  - checkbox: activate/deactivate, heading: tags, tables:
    re-calculate, jump footnote and back, update tables, update
    TODO-count, ...
- ~C-c C-x b~   *open sub-tree in separate buffer* (org-tree-to-indirect-buffer)

*** Creating

- [ ] DEMO: create headings

*** Using

- [ ] DEMO: visibility cycling
- [ ] DEMO: move headings

This is a quite boring text just to show some body content.

**** This is the 1st heading

This is a quite boring text just to show some body content.

***** Sub-heading 1

This is a quite boring text just to show some body content.

**** This is another heading

This is a quite boring text just to show some body content.

***** Sub-heading 2

This is a quite boring text just to show some body content.

**** This is yet another heading
**** OK, now this is getting boring :-)


*** encryption

- whole Org-mode files
- selective headlines using :crypt:
- ~org-decrypt-entry~

*** time stamps when taking notes ([[http://orgmode.org/manual/Relative-timer.html][docu]], [[info:org#Timers][info:org#Timers]])

- ~C-c C-x .~   start timer
- ~C-c C-x -~   insert list item with time
- ~M-<RET>~     insert heading with time
- ~C-c C-x ,~   toggle timer pause
- ~C-u C-c C-x ,~  stop timer

- also handy:
  - ~C-c C-x ;~    set countdown

** sparse trees ([[http://orgmode.org/org.html#Sparse-trees][docu]])

- Filtering
  - ~C-c /~    Filter in *sparse trees*
  - ~C-c / r~  Filter using *Regular Expressions*
- Moving in results
  - ~M-g n~    goto next match
  - ~M-g o~    goto previous match
- [[http://orgmode.org/org.html#Property-searches][docu: property search]]

- ~C-c a L~    time sorted view of buffer

** lists [[http://orgmode.org/org.html#Plain-lists][(docu)]]

- ~M-RET~      *new list item*
- ~M-S-RET~    create checkbox
- ~M-LEFT/RIGHT/UP/DOWN~  move item
- ~C-c -~      cycle item type OR turn into list item

*** examples

simple list:
- Emacs
- Org-mode
- Lists

enumerate:
1. Emacs
2. Org-mode
3. Lists

check lists:

*** Simple

- [ ] DEMO: create simple lists and move items around

*** Checklists

- ~M-S-RET~  new item with checkbox
- ~C-c C-*~  checkboxes become TODOs
- ~C-c C-C~  toggle checkboxes between ~[X]~ and ~[ ]~
- ~C-u C-u C-c C-C~  toggle checkboxes between ~[ ]~ and ~[-]~

- Clean out garage
  1. [ ] get stuff out
     - [ ] be careful with that axe, Eugene
  2. [ ] get rid of old stuff
     - using eBay?
     - try to use rubbish as birthday presents for family
  3. [ ] repaint garage
  4. [ ] put stuff back in

*** Headings with TODO items

**** TODO Clean out garage [0/4]

***** TODO get stuff out

- be careful with that axe, Eugene

***** TODO get rid of old stuff

- using eBay?
- try to use rubbish as birthday presents for family

***** TODO repaint garage

***** TODO put stuff back in
*** Taking notes during a meeting or similar ([[http://orgmode.org/org.html#Relative-timer][docu]])
:PROPERTIES:
:CREATED:  [2014-04-20 Sun 11:33]
:END:

- ~C-c C-x .~        (re)start a timer
- ~C-c C-x -~ or ~M-<RET>~  insert description list item with the current relative time
- ~C-c C-x ,~        pause/continue
- ~C-u C-c C-x ,~    stop timer

Bonus feature:
- ~C-c C-x ;~        count down timer

** drawers, properties, columns ([[http://orgmode.org/org.html#Properties-and-Columns][docu]])

- meta-data on headings
- standard drawers :PROPERTIES: and :LOGBOOK:
- ends with :END:

- FIXXME

- ~C-c C-z~      timed LOGBOOK entry
- ~:ID: label~   define ID in PROPERTIES

- hint: the property CATEGORY gets inherited and displayed on the
  agenda:

*** NEXT Test with category property                                :mytag:
:PROPERTIES:
:CATEGORY: mycategory
:END:

** blocks ([[http://orgmode.org/org.html#Blocks][docu]])

- encapsulating content with begin...end structure
- ~<s + TAB~   easy templates ([[http://orgmode.org/org.html#Easy-Templates][docu]])

#+BEGIN_EXAMPLE
Some example from a text file.
#+END_EXAMPLE

- more of it in the Babel section later on
- differences between non-source-code blocks ([[http://orgmode.org/org.html#Literal-examples][docu]]):

| *type*  | *indendation* | *blank lines* | *line breaks* | *Org syntax* | *notes*                           |
|---------+---------------+---------------+---------------+--------------+-----------------------------------|
| example | preserved     | preserved     | preserved     | ignored      | like SRC block without a language |
| verse   | preserved     | preserved     | preserved     | recognized   |                                   |
| quote   | preserved     | preserved     | not preserved | recognized   | for quoting text                  |
| center  | not preserved | preserved     | not preserved | recognized   |                                   |

*** examples for non-source-code blocks

#+BEGIN_EXAMPLE
This is a test.

Demonstration of long lines within a non-source-code block like this or that or something else which is quite good.

   Space upfront

   [[id:foobar]] *bold* /italic/
#+END_EXAMPLE

#+BEGIN_VERSE
This is a test.

Demonstration of long lines within a non-source-code block like this or that or something else which is quite good.

   Space upfront

   [[id:foobar]] *bold* /italic/

#+END_VERSE

#+BEGIN_QUOTE
This is a test.

Demonstration of long lines within a non-source-code block like this
or that or something else which is quite good.

   Space upfront

   [[id:foobar]] *bold* /italic/

#+END_QUOTE

#+BEGIN_CENTER
This is a test.

Demonstration of long lines within a non-source-code block like this
or that or something else which is quite good.

   Space upfront

   [[id:foobar]] *bold* /italic/

#+END_CENTER

** links [[http://orgmode.org/org.html#Hyperlinks][(docu)]]

: [[link]]
: [[link][description]]

target:
: # <<link>>

- id:myexampleid
- [[file:~/.zshrc.local]]
- http://orgmode.org
  - [[http://orgmode.org/org.html#External-links][docu: list of external links]]
- custom links: [[contact:John%20Smith][contact:John Smith]]
  - [[http://orgmode.org/org.html#Link-abbreviations][docu: link abbrevations]]

- ~C-c l~    *store link* (also in many other buffer types: [[http://orgmode.org/org.html#Handling-links][docu]])
- ~C-c C-l~  *inserting link* (or edit existing link)
- ~C-u C-c C-l~  file link (shortcut)
- ~C-c C-o~  *open link*
- ~C-c C-x C-n~ goto *next link*
- ~C-c C-x C-p~ goto *previous link*

- "radio targets" are auto-links created by target like ~<<<target name>>>~
  - all occurrences of "target name" will be links

- ~C-c C-x C-v~  toggle show inline images

- ~C-c %~   push position into ring
- ~C-c &~   goto last saved position in ring

- footnotes ([[http://orgmode.org/org.html#Footnotes][docu]])
  - plain          [fn::great content here]
  - with own label [fn:mylabel:great content here]
  - reference      [fn:myotherlabel] [fn:2]
  - ~C-c C-c~      jump between footnote and reference
  - ~C-c C-x f~    footnote action command (see [[http://orgmode.org/org.html#Footnotes][docu]])

[fn:myotherlabel] This is a footnote from reference above.
[fn:2] This is a footnote with a simple number as label.

- *many external link types* see [[http://orgmode.org/org.html#External-links][docu]]

*** heading with PROPERTIES drawer containing ID
:PROPERTIES:
:ID: myexampleid
:END:

foo bar
** states; TODO items ([[http://orgmode.org/org.html#TODO-Items][docu]])

- ~C-c C-t~   *rotate TODO state*
- ~C-c / t~   sparse tree with TODOs
- ~C-c a t~   global TODO list in agenda
- ~C-S-RET~   *new TODO heading*

- per-file keywords     ~#+TODO: TODO(t) FEEDBACK(f) | DONE(d!) CANCELED(c!@)~
  - ~!~   timestamp
  - ~@~   add note

*** making dependencies explicit: org-depend

- simple, ordered method with PROPERTIES drawer:
: :ORDERED: t
- ~C-c C-x o~  toggle ORDERED property

- see only tasks that are *not* depending on other *open* tasks
  - see only things that can be done now
- http://orgmode.org/worg/org-contrib/org-depend.html
- to define workflows (see demo below)

- task dependencies with org-depend ([[http://orgmode.org/worg/org-contrib/org-depend.html][docu]])
  - ~:BLOCKER: an-heading-id another-heading-id~ define blocking task
  - ~:TRIGGER: chain-siblings(NEXT)~  define trigger for setting NEXT
  - ~:TRIGGER: my-heading-id(NEXT)~   define trigger for specific heading to set to NEXT

**** example with chain siblings

***** NEXT buy bike
:PROPERTIES:
:TRIGGER: chain-siblings(NEXT)
:END:

***** take tour

***** goto hospital

**** example with triggers and blockers

***** NEXT go for shopping
:PROPERTIES:
:ID: my-shopping
:TRIGGER: my-new-clothes(NEXT) my-next-errands(TODO)
:END:

After setting this task to DONE, enjoying new clothes get to state
NEXT and looking out for next errands to TODO.

***** enjoy new clothes
:PROPERTIES:
:ID: my-new-clothes
:END:

***** look out for next errands
:PROPERTIES:
:ID: my-next-errands
:BLOCKER: my-new-clothes
:END:

I can not finish this task as long as I did not enjoy my new clothes.


*** making dependencies explicit: org-edna

- [[https://www.nongnu.org/org-edna-el/][org-edna]]: bit more complex syntax compared to org-depend but also more powerful

- same general approach using ~:BLOCKER:~ and ~:TRIGGER:~ properties

- task dependencies with org-edna:
  - ~:BLOCKER: ids("an-heading-id" "another-heading-id")~ define blocking task
  - ~:BLOCKER: ids("id:an-heading-id" "another-heading-id")~ same example but navigable id
  - ~:TRIGGER: ids("my-heading-id") todo!(NEXT) scheduled!("++3d")~   define trigger for specific heading to set to NEXT and schedule 3 days later

**** example with triggers and blockers

***** NEXT go for shopping
:PROPERTIES:
:ID: my-shopping
:TRIGGER: ids("my-new-clothes") todo!(NEXT) ids("id:my-next-errands") todo!(TODO)
:END:

After setting this task to DONE, enjoying new clothes get to state
NEXT and looking out for next errands to TODO.

***** enjoy new clothes
:PROPERTIES:
:ID: my-new-clothes
:END:

***** look out for next errands
:PROPERTIES:
:ID: my-next-errands
:BLOCKER: ids("my-new-clothes")
:END:

I can not finish this task as long as I did not enjoy my new clothes.

*** logging state changes ([[http://orgmode.org/org.html#Tracking-TODO-state-changes][docu]])

- ~!~ in todo state definition
- ~org-log-into-drawer~ for setting default behavior

*** habits ([[http://orgmode.org/org.html#Tracking-your-habits][docu]])

- enable habits module by customizing the variable ~org-modules~
- TODO items with property STYLE is set to the value ~habit~:
: :STYLE: habit

#+BEGIN_EXAMPLE
     ** TODO Shave
        SCHEDULED: <2009-10-17 Sat .+2d/4d>
        - State "DONE"       from "TODO"       [2009-10-15 Thu]
        - State "DONE"       from "TODO"       [2009-10-12 Mon]
        - State "DONE"       from "TODO"       [2009-10-10 Sat]
        - State "DONE"       from "TODO"       [2009-10-04 Sun]
        - State "DONE"       from "TODO"       [2009-10-02 Fri]
        - State "DONE"       from "TODO"       [2009-09-29 Tue]
        - State "DONE"       from "TODO"       [2009-09-25 Fri]
        - State "DONE"       from "TODO"       [2009-09-19 Sat]
        - State "DONE"       from "TODO"       [2009-09-16 Wed]
        - State "DONE"       from "TODO"       [2009-09-12 Sat]
        :PROPERTIES:
        :STYLE:    habit
        :LAST_REPEAT: [2009-10-19 Mon 00:36]
        :END:
#+END_EXAMPLE

*** priorities ([[http://orgmode.org/org.html#Priorities][docu]])

- ~C-c ,~     set priorities
- ~S-UP/DOWN~ *change priority*

- [A], [B], [C]
- no priority is ordered like [B]

**** TODO [#A] example

*** breaking down in subtasks ([[http://orgmode.org/org.html#Breaking-down-tasks][docu]])

- for TODO-headings: stat cookies   ~[/]~ or ~[%]~ (will be ~[1/3]~ or ~[33%]~)
- also possible:
  - for checkboxes
  - recursive
  - mark entry to DONE if all children are DONE

**** TODO example [1/3] [33%]
***** DONE subtask 1
***** TODO subtask 2
***** TODO subtask 3

** inline display of images (and PDF files)

- ~C-c C-x C-v~ =org-toggle-inline-images=

[[file:org-mode-logo_283x283.png]]

[[file:org-mode-teaser.pdf]]

** tags [[http://orgmode.org/org.html#Tags][(docu)]]

- inherited tags
- per-file definition of tags:
: #+TAGS: { @work(w) @home(h) } online(o) kids(k)

- per-file tags for all entries:
: #+FILETAGS: :this:that:foo:

- ~C-c C-q~   *set tags*
- ~C-c C-c~   set tags if cursor is on a heading

- ~C-c / m~   *search for tags* in sparse tree
- ~C-c a m~   global list of tag matching
- ~C-c a M~   same but check only TODO items

- syntax ([[http://orgmode.org/org.html#Matching-tags-and-properties][docu]])
  - ~+boss+urgent~  AND
  - ~boss|urgent~   OR
  - ~+boss+urgent-project~   combination of tags
  - ~work+TODO="WAITING"|home+TODO="WAITING"~  Waiting tasks both at work and at home

*** example                                                           :tag:

*** Tag groups ([[http://orgmode.org/manual/Tag-groups.html][docu]])

- searching for a group tag return matches of all member tags as well
- example:

#+TAGS: { @read: @read_book @read_ebook }

#+BEGIN_SRC elisp
  (setq org-tag-alist '((:startgroup . nil)
                        ("@read" . nil)
                        (:grouptags . nil)
                        ("@read_book" . nil)
                        ("@read_ebook" . nil)
                        (:endgroup . nil)))
#+END_SRC

- searching for "@read" also returns "@read_book" and "@read_ebook"

** tables simple [[http://orgmode.org/org.html#Tables][(docu)]]

- ~C-c C-c~  *update table*
- ~TAB~      *move next field*
- ~RET~      next row
- ~M-LEFT/RIGHT/UP/DOWN~   *moving rows/columns*
- ~C-c -~    insert vertical bar below
- ~C-c |~    convert region into table OR: insert new table
- ~C-c ^~    sort lines (in region)

- [ ] DEMO: create table

** tables complex ([[http://orgmode.org/org.html#The-spreadsheet][docu]], [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][tutorial]])

- ~C-c |~  move region into table (see [[http://orgmode.org/org.html#Built_002din-table-editor][docu]])
  - TABs, CSV, ...
- ~C-c +~   sum current column (or marked rectangle)

- ~=$1+$2~            value = sum of 1st and 2nd column
- ~:=vsum(@I..@II)~   field = sum between 1st and 2nd hline
- ~C-u C-u C-c C-c~   recompute table with iterations ([[http://orgmode.org/org.html#Updating-the-table][docu]])

- ~#+TBLFM: $3 = $1 + $2~             table formula
- ~#+TBLFM: $1 = -1 + 1 :: @2$1 = 1~  incremental numbers

- ~org-table-import~  import data from CSV file
- ~org-table-export~  export data to CSV file

#+TBLNAME: mydemo-USD-EUR-rate
| *US-Dollar* |      *EUR* |
|           1 | 0.76481836 |

|     *When* | *What*                 | *USD* | *EUR* |
|------------+------------------------+-------+-------|
| 2012-02-03 | Taxi Graz-Airport      |       | 18.00 |
| 2012-02-03 | Taxi Seattle Airport   | 25.00 | 19.12 |
| 2012-02-13 | Taxi                   |  7.00 |  5.35 |
| 2012-02-14 | Taxi                   |  8.00 |  6.12 |
| 2012-02-17 | Taxi to Airport SeaTac | 35.00 | 26.77 |
| 2012-02-22 | Taxi Airport-Graz      |       | 16.00 |
|------------+------------------------+-------+-------|
|            |                        |       | 91.36 |
#+TBLFM: @>$4=vsum(@I$4..@II$4);%.2f::@3$4=@3$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@4$4=@4$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@5$4=@5$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f::@6$4=@6$3*remote(mydemo-USD-EUR-rate,@2$2);%.2f

- ~C-c C-c~   update values
- ~C-c }~     visualize rows/columns
- ~C-c '~     edit formula in separate buffer
  - ~C-c C-r~ switch between internal references (@3$2) and standard references (B3)
  - ~S-<up>/<down>/<left>/<right>~  shift reference at point
- [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html#sec-7][debugging formulas]]

- many, many, many more table features in the documentation!
  - http://orgmode.org/worg/org-tutorials/index.html#sec-3-2
  - http://orgmode.org/worg/org-faq.html#Tables
    - [[http://orgmode.org/worg/org-faq.html#fill-table-column-with-incremental-numbers][incremental numbers]], [[http://orgmode.org/worg/org-faq.html#table-column-filled-with-ERROR][what to do on #ERROR in columns]], ...
  - http://orgmode.org/worg/org-hacks.html#sec-1-4
    - calculations using time, date, hex, GPS, ...

*** referencing example with detailed explanation

Here is another example working with tables and referencing other
tables. I did this example twice: first in a column (vertical) based
layout and then the very same example in a row (horizontal) based layout:

**** column-based

#+NAME: Income2012v
|       | Income May 2012 | Income June 2012 |
|-------+-----------------+------------------|
| Joe   |              12 |               10 |
| Alice |              22 |               24 |
| Bob   |              16 |               17 |
|-------+-----------------+------------------|
| sum   |              50 |               51 |

#+NAME: comparison-table-vertical
|       | June 2012 (from above) | plus 20 percent | June 2013 | Difference |
|-------+------------------------+-----------------+-----------+------------|
| Joe   |                     10 |            12.0 |        11 |       -1.0 |
| Alice |                     24 |            28.8 |        31 |        2.2 |
| Bob   |                     17 |            20.4 |        21 |        0.6 |
|-------+------------------------+-----------------+-----------+------------|
| sum   |                     51 |                 |           |        1.8 |
#+TBLFM: @>$5=vsum(@I..@II)::@>$3=string("")::$1='(identity remote(Income2012v, @@#$1))::$2='(identity remote(Income2012v, @@#$3))::$3=1.2 * remote(Income2012v, @@#$3);%.1f::$5=$4-$3;%.1f

- all formulas explained in detail:
  - ~@>$5=vsum(@I..@II)~
    - value: ~1.8~
    - last row (~@>~) of column five (~$5~) is the sum of column five
      between first and second horizontal line (~@I..@II~)
  - ~@>$3=string("")~
    - no value (empty)
    - overwrite the last row (~@>~) of column three (~$3~) with an empty
      string
    - otherwise it would get 1.2 times the value of corresponding
      column of table Income2012v as well - I chose not to want this
      sum in this column
  - ~$1='(identity remote(Income2012v, @@#$1))~
    - values: ~Joe~ until ~sum~
    - copy content of the first column of table "Income2012v"
      (Lisp formula ~'(identity remote(Income2012v, @@#$1))~) to the first
      column in this table
      (~$1~)
    - the "identity" statement prevents calc from interpreting the content
    - this is because I am too lazy to enter all names once again :-)
    - see also [[http://orgmode.org/worg/org-hacks.html#field-coordinates-in-formulas][Org-hacks]] for field formulas
  - ~$2='(identity remote(Income2012v, @@#$3))~
    - values: ~10; 24; 17; 51~
    - copy the content of the second column of table "Income2012v" to the
      second column in this table
    - you could skip this column and calculate the values of the next
      columns with direct references to ~remote(Income2012v, @@#$3)~
      as well. However, it is more easy to compare visually if the
      values from 2012 are shown here as well (usability/readability)
    - note: by convention, only the values after the first horizontal
      line are taken
  - ~$3=1.2 * remote(Income2012v, @@#$3);%.1f~
    - values: ~12.0; 28.8; 20.4; 61.2~
    - column three (~$3~) is 120 percent of the values of the third
      column of table "Income2012v" with one decimal place (~;%.1f~)
    - note: 61.2 (1.2 times 51) is overwritten by formula ~@>$3~ from
      above
  - ~$5=$4-$3;%.1f~
    - values: ~-1.0; 2.2; 0.6~
    - column five (~$5~) is the difference between column four to
      column three with one decimal place

Here is another example: how to sum up the numbers of the first column
so far:

#+NAME: Sum-up-of-other-column
| Numbers | Sum of numbers so far |
|---------+-----------------------|
|       1 |                     1 |
|       5 |                     6 |
|      10 |                    16 |
|      50 |                    66 |
|     200 |                   266 |
|    1000 |                  1266 |
#+TBLFM: @3$2..@>$2=vsum(@2$1..$-1)

The formular can be simplified even more by using a column formula:
~#+TBLFM: $2=vsum(@2$1..$-1)~ provides the same result as above.

**** row-based

#+NAME: Income2012h
|                  | Joe | Alice | Bob | sum |
| Income May 2012  |  12 |    22 |  16 |  50 |
| Income June 2012 |  10 |    24 |  17 |  51 |

#+NAME: comparison-table-horizontal
|                  |  Joe | Alice |  Bob |  sum |
| Income June 2012 |   10 |    24 |   17 |   51 |
| plus 20 percent  | 12.0 |  28.8 | 20.4 | 60.0 |
| June 2013        |   11 |    31 |   21 |      |
| Difference       | -1.0 |   2.2 |  0.6 |  1.8 |
#+TBLFM: @>$>=vsum(@5$2..@5$4)::@1$2..@1$4='(identity remote(Income2012h, @1$$#))::@2='(identity remote(Income2012h, @3$$#))::@3$2..@3$4=1.2 * remote(Income2012h, @3$$#);%.1f::@5$2..@5$4=@4-@3;%.1f

- all formulas explained in detail:
  - ~@>$>=vsum(@5$2..@5$4)~
    - value: ~1.8~
    - last column in last row (~@>$>~) is the vector-sum (~vsum~) of
      column two to four of fifth row (~@5$2..@5$4~)
  - ~@1$2..@1$4='(identity remote(Income2012h, @1$$#))~
    - values: ~Joe | Alice |  Bob |  sum~
    - column two to four of first row (~@1$2..@1$4~) are copied from
      the corresponding fields of the first row (~@1$$#~) of table
      "Income2012h"
    - see also [[http://orgmode.org/worg/org-hacks.html#field-coordinates-in-formulas][Org-hacks]] for field formulas
  - ~@2='(identity remote(Income2012h, @3$$#))~
    - values: ~2012 Income June |   10 |    24 |   17 |   51~
    - the second row (~@2~) is copied from the corresponding fields of
      the first row (~@1$$#~) of table "Income2012h"
    - my guess: "2012" is moved to the beginning of the field most
      probably because it is interpreted as numeric value and not as
      string
  - ~@3$2..@3$4=1.2 * remote(Income2012h, @3$$#);%.1f~
    - values: ~12.0 |  28.8 | 20.4 | 60.0~
    - the columns two to four of the third row (~@3$2..@3$4~) is 120
      percent of the corresponding values of the third row (~@3$$#~)
      of the table "Income2012h" with one decimal place (~;%.1f~)
  - ~@5$2..@5$4=@4-@3;%.1f~
    - values: ~-1.0 |   2.2 |  0.6~
    - the column two to four of the fifth row (~@5$2..@5$4~) is the
      difference of the values in the corresponding values of the
      fourth row and the third row (~@4-@3~) with one decimal place
      (~;%.1f~)

** column view ([[http://orgmode.org/org.html#Column-view][docu]])
:PROPERTIES:
:COLUMNS:  %25ITEM %TAGS %PRIORITY %TODO %10MyProperties
:MyProperties_ALL: "Thomas" "Maria" "Susan" "Joe"
:END:

- ~C-c C-x C-c~   activate column view
- ~e~             edit value
- ~n/p~           next/previous value
- ~q~             quit column view
- ~a~             edit allowed values
- ~C-c C-x p~     set property

*** example sub-item                                               :mytag1:
:PROPERTIES:
:MyProperties: Susan
:END:

*** NEXT [#B] another example                                      :mytag2:
:PROPERTIES:
:MyProperties: Thomas
:END:

** capture, refile, archive ([[http://orgmode.org/org.html#Capture-_002d-Refile-_002d-Archive][docu]])

- ~C-c c~          *capture*
- ~C-c C-w~        *refile*
- ~C-c C-x C-a~    *archive*
- ~C-u C-u C-c c~  *goto last capture*

- ~#+ARCHIVE: %s_done::~   per-file archive
- ~C-c C-x a~       toggle ARCHIVE tag
- ~C-u C-c C-x a~   check direct children for archiving

#+BEGIN_SRC emacs-lisp
;; ######################################################
;; templates for capturing C-c c
;; http://orgmode.org/org.html#Capture-templates
(setq org-capture-templates
      '(
	("s" "shorts-todo" entry (file+headline "~/share/all/org-mode/misc.org" "shorts")
	 "* NEXT %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("e" "Event" entry (file+headline "~/share/all/org-mode/misc.org" "Events")
	 "* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("i" "IST Templates")
	("is" "IST shorts" entry (file+headline "~/share/all/org-mode/IST.org" "shorts")
	 "* NEXT %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("ie" "IST event" entry (file+headline "~/share/all/org-mode/IST.org" "Events")
	 "* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("ii" "IST isst" entry (file+headline "~/share/all/org-mode/IST.org" "Events")
	 "* %? IST isst: \n:PROPERTIES:\n:CREATED: %U\n:END:\n\n- [[contact:Ingo Pill][Ingo Pill]]\n- [[contact:Thomas Quartisch][Thomas Quartisch]]\n\n" :empty-lines 1)
	("b" "Besorgung" entry (file+headline "~/share/all/org-mode/hardware.org" "Besorgungen")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("C" "Clipboard" entry (file+headline "~/share/all/org-mode/misc.org" "shorts")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n%x\n\n" :empty-lines 1)
	("c" "capture to inbox, refile later" entry (file "~/share/all/org-mode/inbox.org")
	 "\n* %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("m" "movie" entry (file+headline "~/share/all/org-mode/movies.org" "inbox")
	 "* TODO %?\n:PROPERTIES:\n:CREATED: %U\n:END:\n\n" :empty-lines 1)
	("x" "xlog")
	("xh" "xlog hometrainer" table-line (id "xlog-hometrainer") "| %T |  |  |  |")
	("xk" "Keyboard Akkus leer" table-line (id "3407c9b7-1b41-443b-9254-32c4af3a54e8") "| %T |")
      )
)
#+END_SRC

** attachments ([[http://orgmode.org/org.html#Attachments][docu]])

- ~C-c C-a~    *org-attach* (menu)
  - ~i~        *inherit*
  - ~s~        *set directory*
  - ~a~        attach: move file to task directory
  - ~c/m/l~    attach: copy/move/link file
- much more

** dates & time ([[http://orgmode.org/org.html#Dates-and-Times][docu]])

- ~C-c .~    *insert active* <2012-04-23 Mon>  (with ~C-u~: <2012-04-23 Mon 19:14>)
- ~C-c !~    insert inactive [2012-04-23 Mon]  (with ~C-u~: [2012-04-23 Mon 19:14])
- ~S-RIGHT/LEFT/UP/DOWN~  interactively change timestamp
- ~C-c <~    *insert today*
- ~C-c C-o~  open agenda for current timestamp

- ~C-c C-d~  *insert DEADLINE*
- ~C-c C-s~  *insert SCHEDULED*

- ~C-u C-c C-d~   removing DEADLINE
- ~C-u C-c C-s~   removing SCHEDULED
- ~C-c / d~       sparse tree with deadlines

- ~DEADLINE <YYYY-MM-DD DoW +2d>~   defining repeated events/tasks
- ~.+2w~     repetition interval starting with last DONE timestamp
- ~++3m~     never show multiple times even if not DONE
- ~.+2d/4d~  show up on agenda not earlier as 2 days until 4 days
- ~+1w -2d~  repeat weekly but show not earlier as two days before

- ~C-c C-x c~  clone (recurring) event with time-shift  (~org-clone-subtree-with-time-shift~)
  - good idea: create recurring event and clone it with time-shift
  - this way, canceling single events or moving single events is
    possible

- ~13:00-15:15~ or ~13:00+2:15~  time range
- ~<2013-11-15 Fri>-<2013-11-17 Sun>~ date range
- ~C-c C-y~ return time range between dates

- ~UP/DOWN~ on time stamp start/end -> toggle active/inactive

*Note:* please do not use time-stamps prior to [[https://en.wikipedia.org/wiki/Unix_time][UNIX epoch]] which is
1970-01-01. Some systems do handle those time-stamps fine, others
produce errors.

*** advanced date/time with sexp ([[http://orgmode.org/manual/Timestamps.html][docu]])
:PROPERTIES:
:CREATED:  [2014-07-21 Mon 21:11]
:END:

To do a thing every x days between two dates, put:
: %%(and (diary-cyclic x M1 D1 Y1) (diary-block M1 D1 Y1 M2 D2 Y2)) thing

22:00-23:00 The nerd meeting on every 2nd Thursday of the month
: <%%(diary-float t 4 2)>

** agenda ([[http://orgmode.org/org.html#Agenda-Views][docu]])

- ~C-c [~    add buffer to agenda
- ~C-c ]~    remove buffer from agenda
- ~C-c a~    show agenda command menu
- ~C-c a a~  *invoke agenda view*

- ~C-c C-x <~  *lock agenda* to subtree
- ~C-c C-x >~  *release* agenda restriction *lock*

when being *in agenda* mode:

- ~q~        *quit agenda*

- ~j~        *jump to date*
- ~.~        *goto today*
- ~f/b~      *forward/back*
- ~v~        *choose view menu*
- ~d/w~      *day/week view*
- ~v d/w/m~  view for day/week/month
- ~r~        *refresh*

- ~RET~   *goto item*
- ~SPC~   show item
- ~<~     *toggle filter to file*
- ~F~     *toggle follow mode*
- ~o~     *delete other window*
- ~/~     filter by tag

- ~E~     toggle entry text
- ~R~     toggle clock report

- ~t~         *change TODO state*
- ~:~ or ~T~  *set tags*
- ~S-UP/DOWN~     *set priority*
- ~,~             set priority
- ~S-LEFT/RIGHT~  *change timestamp day*
- ~>~         change timestamp to today
- ~e~         set effort

- ~m~     mark
- ~u~     unmark
- ~B~     bulk action
  - ~S~   *scatter marked TODOs* over the next N days

- clocking
  - ~I~   start
  - ~O~   stop
  - ~X~   cancel
  - ~J~   jump to running clock entry

- attachments to TODO entries
  - ~C-c C-a~    *attachment menu*
  - ~C-c C-a s~  *set attachment folder*
  - ~C-c C-a i~  inherit attachment folder
  - ~C-c C-a o~  *open attachment*

- learn how to create your own agenda views:
  - http://orgmode.org/org.html#Custom-agenda-views
  - http://www.reddit.com/r/emacs/comments/2b9obs/org_users_what_did_it_take_you_a_long_time_to/cj4lb35

** clocking time ([[http://orgmode.org/org.html#Clocking-work-time][docu]])

- ~C-c C-x C-i~     start clock on item
- ~C-c C-x C-o/x~   stop or cancel clock on item
- ~C-c C-x C-d~     display total subtree times
- ~C-c C-c~         remove displayed times
- ~C-c C-x C-r~     insert/update table with report

- please do read [[http://irreal.org/blog/?p=5307][Irreal: Org Clocking and Idle Time]] for handling idle
  time for clocking

*** example sub-hierarchy with report

#+BEGIN: clocktable :maxlevel 2 :scope subtree
Clock summary at [2012-11-19 Mon 11:17]

| Headline     | Time    |
|--------------+---------|
| *Total time* | *27:16* |
|--------------+---------|
#+END:

**** example item
:LOGBOOK:
CLOCK: [2012-11-19 Mon 11:16]--[2012-11-19 Mon 11:17] =>  0:01
CLOCK: [2012-11-18 Sun 19:15]--[2012-11-18 Sun 19:23] =>  0:08
:END:

**** another item
:LOGBOOK:
CLOCK: [2012-11-18 Sun 19:26]--[2012-11-18 Sun 19:33] =>  0:07
CLOCK: [2012-11-17 Sat 16:25]--[2012-11-18 Sun 19:25] => 27:00
:END:

** dynamic blocks with ELISP ([[http://orgmode.org/org.html#Dynamic-blocks][docu]])

- execute ELISP functions in special blocks (see docu)

- ~C-c C-x C-u~      update block
- ~C-u C-c C-x C-u~  update buffer blocks

** source code ([[http://orgmode.org/org.html#Working-With-Source-Code][docu]])

- python "Hello World"
- ~C-c '~      *edit in native mode*
- ~<s + TAB~   *easy templates* ([[http://orgmode.org/org.html#Easy-Templates][docu]])

#+BEGIN_SRC python :results output
  def foo(argument):
       print ("Hello World")

  foo(42)
 #+END_SRC

 #+RESULTS:

** babel ([[http://orgmode.org/org.html#Library-of-Babel][docu]])

- http://orgmode.org/org.html#Languages
  - 2012-04-23: 35(!) languages

- ~C-c C-c~    *execute code*
- ~C-c C-v j~  insert header argument (menu)

- *many* shortcuts for all kind of things
  - debugging
  - output control
  - navigation
  - session handling

- ~C-c C-v b~  execute babel in buffer
- ~C-c C-v s~  execute babel in subtree

*** babel simple ([[http://orgmode.org/org.html#Working-With-Source-Code][doc]])

- some examples are taken from [[http://orgmode.org/worg/org-contrib/babel/intro.html][Worg: Introduction to Babel]]

**** shell

#+BEGIN_SRC sh
pwd
#+END_SRC

**** ruby

#+begin_src ruby
require 'date'
"This file was last evaluated on #{Date.today}"
#+end_src

**** python

#+BEGIN_SRC python
return 42 + 7
#+END_SRC

**** ditaa

#+begin_src ditaa :file blue.png :cmdline -r
  +---------+
  | cBLU    |
  |         |
  |    +----+
  |    |cPNK|
  |    |    |
  +----+----+
#+end_src

*** babel advanced

**** session with shell and R

#+name: directories
#+begin_src sh :results replace
  cd ~/archive/events_memories && du -sc * |grep -v total
#+end_src

Using result set "directories" from above as "dirs" in R below:

#+name: directory-pie-chart(dirs = directories)
#+begin_src R :session R-pie-example :file ./dirs.png
  pie(dirs[,1], labels = dirs[,2])
#+end_src

**** remote shell session

- Examples in this session is inspired by [[https://www.youtube.com/watch?v=dljNabciEGg&feature=youtu.be][a great DevOps-demo video]] by
  Howard Abrams ([[https://github.com/howardabrams/literate-devops-demo/blob/master/presentation.org][Demo material]])

Executing shell commands:

#+BEGIN_SRC sh
echo "Executed by `whoami` on `hostname` in `pwd`"
#+END_SRC

#+RESULTS:
: Executed by karl on WORKINGDESKTOP in /cygdrive/c/Users/karl/

Doing something as root:

#+BEGIN_SRC sh :dir /sudo::
apt-get update
#+END_SRC

Switching to a remote host:

#+BEGIN_SRC sh
ssh vk@karl-voit.at 'echo "Executed by `whoami` on `hostname` in `pwd`"'
#+END_SRC

#+RESULTS:
: Executed by vk on karl-voit.at in /home/vk

***** Even more convenient remote access
:PROPERTIES:
:header-args:sh: :results output :session 2015-11-02-ssh-testsession :dir /vk@karl-voit.at:/tmp
:END:

Note: ~results~, ~dir~, and ~session~ parameters for babel are placed
in the ~PROPERTIES~ drawer above.

Do stuff remote:

#+begin_src sh
echo "Executed by `whoami` on `hostname` in `pwd`"
date
#+end_src

#+RESULTS:
: Executed by vk on karl-voit.at in /tmp
: Mon Nov  2 20:05:19 CET 2015

See interactive shell in buffer: ~2015-11-02-ssh-testsession~

**** table using python function to calculate values

#+NAME: epoch2day
#+BEGIN_SRC python :results output :var epoch=1262675465119
time = epoch
import datetime
strtime = str(time)
datetimestamp = datetime.datetime.utcfromtimestamp(int(strtime[:10]))
print(datetimestamp.strftime('[%Y-%m-%d %a %H:%M:%S]'))
#+END_SRC

#+RESULTS: epoch2day
: [2010-01-05 Tue 07:11:05]

|  *UNIX epoch* | *time-stamp*           |
|---------------+------------------------|
| 1262675465119 | [2010-01-05 Tue 07:11] |
|    1234567890 | [2009-02-13 Fri 23:31] |
|    1000000000 | [2001-09-09 Sun 01:46] |
#+TBLFM: $2='(sbe epoch2day (epoch $1))

** LaTeX ([[http://orgmode.org/org.html#Embedded-LaTeX][docu]])

- ~C-c '~        *open block native buffer*

- ~C-c C-x C-l~  preview LaTeX fragments
- ~C-c C-c~      quit preview
- ~C-c C-x \~    toggle preview TeX characters as UTF-8

Greek characters \alpha \beta \phi \LaTeX{}  $\varphi$

- ~M-x org-cdlatex-mode~  CDLaTeX minor mode
  - from http://staff.science.uva.nl/~dominik/Tools/cdlatex/
  - similar to AucTeX
  - ~C-c {~     insert environment
  - ~equ TAB~   expands equation
  - ~`~         insert math symbols (menu)

#+BEGIN_LaTeX

  \section{Section Title}

  This is \emph{emphasized} and $y=x^2$ is an equation.

#+END_LaTeX

** export formats ([[http://orgmode.org/org.html#Exporting][docu]])

- ~C-c C-e~   *export menu*
- ~C-c ;~     toggle COMMENT keyword on entry

- tag: "noexport"

- ASCII/Latin-1/UTF-8 export
- HTML
- LaTeX
- PDF
- DocBook
- OpenDocument Text
- TaskJuggler
- Freemind
- XOXO
- iCalendar
- [[http://pandoc.org/][Pandoc]]
- ...

- [ ] DEMO: export this as PDF (plain)
- [ ] DEMO: export this as PDF (beamer)

*** Export options ([[http://orgmode.org/manual/Export-options.html][docu]])
:PROPERTIES:
:EXPORT_FILE_NAME: my-file-name
:EXPORT_TITLE: the title to be shown (default is the heading name)
:EXPORT_TEXT: Some descriptive text to be inserted at the beginning.
:EXPORT_AUTHOR: the author (default taken from user-full-name)
:EXPORT_DATE: a date, an Org timestamp, or a format string for format-time-string
:EXPORT_OPTIONS: toc:nil author:nil ^:nil *:nil
:END:

- per file:
  - ~C-c C-e t~ (org-insert-export-options-template)
- per heading:
  - see properties drawer above
  - EXPORT_OPTIONS: see [[http://orgmode.org/manual/Export-options.html][docu]]

** MobileOrg ([[http://orgmode.org/org.html#MobileOrg][docu]])

- great [[http://mobileorg.ncogni.to/][iOS app]]
  - no iOS on my side
  - does not seem to be maintained any more :-(
- [[http://wiki.github.com/matburt/mobileorg-android/][Android app]]
  - sync via Dropbox, ssh, scp, WEBDAV, gpg encryption, ...

#+BEGIN_SRC emacs-lisp
;;; http://orgmode.org/org.html#MobileOrg
;;; directory where to store MobileOrg-files
(setq org-mobile-directory "~/share/all/org-mode/mobile-org/")
(setq org-directory "~/share/all/org-mode")
(setq org-mobile-inbox-for-pull "~/share/all/org-mode/inbox.org")
(setq org-mobile-force-id-on-agenda-items nil)
'(org-mobile-files (quote ("~/share/all/org-mode/contacts.org" "~/data/share/all/org-mode/hardware.org" )))
#+END_SRC

- http://www.orgzly.com/ (since approx. 2015-01)
  - promising new app

** many many many many more features!

- sections above are only a small fraction of the feature-set of Org-mode!
- read [[http://orgmode.org/org.html][the manual]] or [[http://news.gmane.org/gmane.emacs.orgmode][the mailinglist]] to get inspired :-)

** customization per ...

- per configuration
- per file
- per heading


* Still Missing Topics

Things I did not include yet but are worth mentioning:

- [ ] org-protocol

* Testing section                                                  :noexport:
:PROPERTIES:
:ID: teaser-tests
:END:

Feel free to use this space to test something.

* Local Variables                                                  :noexport:
# Local Variables:
# eval: (message "eval 1")
# mode: org
# eval: (message "eval 1")
# End: