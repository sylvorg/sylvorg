hosts:
    "*.magic":
        ResolveCommand: /usr/bin/env sh -c "echo %h | cut -d '.' -f 1"
    "*.tailscale.*":
        ResolveCommand: /usr/bin/env sh -c "tailscale ip -$(echo %h | rev | cut -d '.' -f 1) $(echo %h | cut -d '.' -f 1)"
    "*.tailapi.*":
        ResolveCommand: /usr/bin/env sh -c "tailapi -rD sylvorg.github --api-key $(pass show keys/api/tailscale/jeet.ray) -d $(echo %h | cut -d '.' -f 1) ip -f$(echo %h | rev | cut -d '.' -f 1)"
    "*.dns":
        ResolveCommand: /usr/bin/env sh -c "echo $(echo %h | cut -d '.' -f 1).syvl.org"
    "*.local.hostname":
        ResolveCommand: /usr/bin/env sh -c "ping -c 1 $(echo %h | cut -d '.' -f 1) | head -1 | awk '{print $3}' | sed 's/[()]//g'"
    "*.local.mac":
        ResolveCommand: /usr/bin/env sh -c "ip neighbor | grep -i $(echo %h | cut -d '.' -f 1) | cut -d ' ' -f 1"
    "argus.wstunnel.tls.magic":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(echo %h | cut -d '.' -f 1):443"
    "argus.wstunnel.tls.tailscale":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(tailscale ip -$(echo %h | rev | cut -d '.' -f 1) $(echo %h | cut -d '.' -f 1)):443"
    "argus.wstunnel.tls.tailapi":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(tailapi -rD sylvorg.github --api-key $(pass show keys/api/tailscale/jeet.ray) -d $(echo %h | cut -d '.' -f 1) ip -f$(echo %h | rev | cut -d '.' -f 1)):443"
    "argus.wstunnel.tls.dns":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://io.syvl.org:443"
    "argus.wstunnel.tls.public":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://:443"

    "argus.wstunnel.http.magic":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(echo %h | cut -d '.' -f 1):80"
    "argus.wstunnel.http.tailscale":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(tailscale ip -$(echo %h | rev | cut -d '.' -f 1) $(echo %h | cut -d '.' -f 1)):80"
    "argus.wstunnel.http.tailapi":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://$(tailapi -rD sylvorg.github --api-key $(pass show keys/api/tailscale/jeet.ray) -d $(echo %h | cut -d '.' -f 1) ip -f$(echo %h | rev | cut -d '.' -f 1)):80"
    "argus.wstunnel.http.dns":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://io.syvl.org:80"
    "argus.wstunnel.http.public":
        ProxyCommand: /usr/bin/env sh -c "wstunnel -L stdio:%h:%p wss://:80"

    "argus.iodine.magic":
        ProxyCommand: /usr/bin/env sh -c ""
    "argus.iodine.tailscale":
        ProxyCommand: /usr/bin/env sh -c ""
    "argus.iodine.tailapi":
        ProxyCommand: /usr/bin/env sh -c ""
    "argus.iodine.dns":
        ProxyCommand: /usr/bin/env sh -c ""
    "argus.iodine.public":
        ProxyCommand: /usr/bin/env sh -c ""

    "argus":
        HostName: io.syvl.org
        Gateways:
            - argus.magic
            - argus.tailscale.4
            - argus.tailscale.6
            - argus.tailapi.4
            - argus.tailapi.6
            - argus.dns
            - direct
            # - argus.wstunnel.tls.magic
            # - argus.wstunnel.tls.tailscale
            # - argus.wstunnel.tls.tailapi
            # - argus.wstunnel.tls.dns
            # - argus.wstunnel.tls.public
            # - argus.wstunnel.http.magic
            # - argus.wstunnel.http.tailscale
            # - argus.wstunnel.http.tailapi
            # - argus.wstunnel.http.dns
            # - argus.wstunnel.http.public
            # - argus.wstunnel.io.magic
            # - argus.wstunnel.io.tailscale
            # - argus.wstunnel.io.tailapi
            # - argus.wstunnel.io.dns
            # - argus.wstunnel.io.public

        sandshrew:
            HostName: ╭───────────────────── Traceback (most recent call last) ──────────────────────╮
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connection.py:174 in _new_conn                │
    │                                                                              │
    │   171 │   │   │   extra_kw["socket_options"] = self.socket_options           │
    │   172 │   │                                                                  │
    │   173 │   │   try:                                                           │
    │ ❱ 174 │   │   │   conn = connection.create_connection(                       │
    │   175 │   │   │   │   (self._dns_host, self.port), self.timeout, **extra_kw  │
    │   176 │   │   │   )                                                          │
    │   177                                                                        │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ extra_kw = {'socket_options': [(6, 1, 1)]}                               │ │
    │ │     self = <urllib3.connection.HTTPSConnection object at 0x7ff7ed158e80> │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/util/connection.py:72 in create_connection    │
    │                                                                              │
    │    69 │   │   │   LocationParseError(u"'%s', label empty or too long" % host │
    │    70 │   │   )                                                              │
    │    71 │                                                                      │
    │ ❱  72 │   for res in socket.getaddrinfo(host, port, family, socket.SOCK_STRE │
    │    73 │   │   af, socktype, proto, canonname, sa = res                       │
    │    74 │   │   sock = None                                                    │
    │    75 │   │   try:                                                           │
    │                                                                              │
    │ ╭─────────────────── locals ────────────────────╮                            │
    │ │        address = ('api.tailscale.com', 443)   │                            │
    │ │            err = None                         │                            │
    │ │         family = <AddressFamily.AF_UNSPEC: 0> │                            │
    │ │           host = 'api.tailscale.com'          │                            │
    │ │           port = 443                          │                            │
    │ │ socket_options = [(6, 1, 1)]                  │                            │
    │ │ source_address = None                         │                            │
    │ │        timeout = None                         │                            │
    │ ╰───────────────────────────────────────────────╯                            │
    │                                                                              │
    │ /nix/store/40n9pd613v8fc3x39yjrgs1i7d4q8yl0-python3-3.10.4/lib/python3.10/so │
    │ cket.py:955 in getaddrinfo                                                   │
    │                                                                              │
    │   952 │   # We override this function since we want to translate the numeric │
    │   953 │   # and socket type values to enum constants.                        │
    │   954 │   addrlist = []                                                      │
    │ ❱ 955 │   for res in _socket.getaddrinfo(host, port, family, type, proto, fl │
    │   956 │   │   af, socktype, proto, canonname, sa = res                       │
    │   957 │   │   addrlist.append((_intenum_converter(af, AddressFamily),        │
    │   958 │   │   │   │   │   │    _intenum_converter(socktype, SocketKind),     │
    │                                                                              │
    │ ╭──────────────── locals ─────────────────╮                                  │
    │ │ addrlist = []                           │                                  │
    │ │   family = <AddressFamily.AF_UNSPEC: 0> │                                  │
    │ │    flags = 0                            │                                  │
    │ │     host = 'api.tailscale.com'          │                                  │
    │ │     port = 443                          │                                  │
    │ │    proto = 0                            │                                  │
    │ │     type = <SocketKind.SOCK_STREAM: 1>  │                                  │
    │ ╰─────────────────────────────────────────╯                                  │
    ╰──────────────────────────────────────────────────────────────────────────────╯
    gaierror: [Errno -3] Temporary failure in name resolution
    
    During handling of the above exception, another exception occurred:
    
    ╭───────────────────── Traceback (most recent call last) ──────────────────────╮
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connectionpool.py:703 in urlopen              │
    │                                                                              │
    │    700 │   │   │   │   self._prepare_proxy(conn)                             │
    │    701 │   │   │                                                             │
    │    702 │   │   │   # Make the request on the httplib connection object.      │
    │ ❱  703 │   │   │   httplib_response = self._make_request(                    │
    │    704 │   │   │   │   conn,                                                 │
    │    705 │   │   │   │   method,                                               │
    │    706 │   │   │   │   url,                                                  │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ _is_ssl_error_message_from_http_pr… <function                            │ │
    │ │                                   = HTTPConnectionPool.urlopen.<locals>… │ │
    │ │                                     at 0x7ff7ed13e4d0>                   │ │
    │ │                  assert_same_host = False                                │ │
    │ │                              body = None                                 │ │
    │ │                          body_pos = None                                 │ │
    │ │                           chunked = False                                │ │
    │ │                        clean_exit = False                                │ │
    │ │                              conn = None                                 │ │
    │ │                destination_scheme = None                                 │ │
    │ │                               err = None                                 │ │
    │ │                           headers = {'User-Agent':                       │ │
    │ │                                     'python-requests/2.27.1',            │ │
    │ │                                     'Accept-Encoding': 'gzip, deflate,   │ │
    │ │                                     br', 'Accept': '*/*', 'Connection':  │ │
    │ │                                     'keep-alive', 'Authorization':       │ │
    │ │                                     'Basic                               │ │
    │ │                                     dHNrZXkta0hVU1ZuNkNOVFJMLTNDTlNOdmk… │ │
    │ │              http_tunnel_required = False                                │ │
    │ │                 is_new_proxy_conn = False                                │ │
    │ │                            method = 'GET'                                │ │
    │ │                        parsed_url = Url(                                 │ │
    │ │                                     │   scheme=None,                     │ │
    │ │                                     │   auth=None,                       │ │
    │ │                                     │   host=None,                       │ │
    │ │                                     │   port=None,                       │ │
    │ │                                     │                                    │ │
    │ │                                     path='/api/v2/tailnet/sylvorg.githu… │ │
    │ │                                     │   query='fields=all',              │ │
    │ │                                     │   fragment=None                    │ │
    │ │                                     )                                    │ │
    │ │                      pool_timeout = None                                 │ │
    │ │                          redirect = False                                │ │
    │ │                      release_conn = False                                │ │
    │ │                 release_this_conn = True                                 │ │
    │ │                       response_kw = {                                    │ │
    │ │                                     │   'preload_content': False,        │ │
    │ │                                     │   'decode_content': False          │ │
    │ │                                     }                                    │ │
    │ │                           retries = Retry(total=0, connect=None,         │ │
    │ │                                     read=False, redirect=None,           │ │
    │ │                                     status=None)                         │ │
    │ │                              self = <urllib3.connectionpool.HTTPSConnec… │ │
    │ │                                     object at 0x7ff7ed158cd0>            │ │
    │ │                           timeout = Timeout(connect=None, read=None,     │ │
    │ │                                     total=None)                          │ │
    │ │                       timeout_obj = Timeout(connect=None, read=None,     │ │
    │ │                                     total=None)                          │ │
    │ │                               url = '/api/v2/tailnet/sylvorg.github/dev… │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connectionpool.py:386 in _make_request        │
    │                                                                              │
    │    383 │   │                                                                 │
    │    384 │   │   # Trigger any extra validation we need to do.                 │
    │    385 │   │   try:                                                          │
    │ ❱  386 │   │   │   self._validate_conn(conn)                                 │
    │    387 │   │   except (SocketTimeout, BaseSSLError) as e:                    │
    │    388 │   │   │   # Py2 raises this as a BaseSSLError, Py3 raises it as soc │
    │    389 │   │   │   self._raise_timeout(err=e, url=url, timeout_value=conn.ti │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │            chunked = False                                               │ │
    │ │               conn = <urllib3.connection.HTTPSConnection object at       │ │
    │ │                      0x7ff7ed158e80>                                     │ │
    │ │ httplib_request_kw = {                                                   │ │
    │ │                      │   'body': None,                                   │ │
    │ │                      │   'headers': {'User-Agent':                       │ │
    │ │                      'python-requests/2.27.1', 'Accept-Encoding': 'gzip, │ │
    │ │                      deflate, br', 'Accept': '*/*', 'Connection':        │ │
    │ │                      'keep-alive', 'Authorization': 'Basic               │ │
    │ │                      dHNrZXkta0hVU1ZuNkNOVFJMLTNDTlNOdmk1b3pkTUpDaG0zNl… │ │
    │ │                      }                                                   │ │
    │ │             method = 'GET'                                               │ │
    │ │               self = <urllib3.connectionpool.HTTPSConnectionPool object  │ │
    │ │                      at 0x7ff7ed158cd0>                                  │ │
    │ │            timeout = Timeout(connect=None, read=None, total=None)        │ │
    │ │        timeout_obj = Timeout(connect=None, read=None, total=None)        │ │
    │ │                url = '/api/v2/tailnet/sylvorg.github/devices?fields=all' │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connectionpool.py:1040 in _validate_conn      │
    │                                                                              │
    │   1037 │   │                                                                 │
    │   1038 │   │   # Force connect early to allow us to validate the connection. │
    │   1039 │   │   if not getattr(conn, "sock", None):  # AppEngine might not ha │
    │ ❱ 1040 │   │   │   conn.connect()                                            │
    │   1041 │   │                                                                 │
    │   1042 │   │   if not conn.is_verified:                                      │
    │   1043 │   │   │   warnings.warn(                                            │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ __class__ = <class 'urllib3.connectionpool.HTTPSConnectionPool'>         │ │
    │ │      conn = <urllib3.connection.HTTPSConnection object at                │ │
    │ │             0x7ff7ed158e80>                                              │ │
    │ │      self = <urllib3.connectionpool.HTTPSConnectionPool object at        │ │
    │ │             0x7ff7ed158cd0>                                              │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connection.py:358 in connect                  │
    │                                                                              │
    │   355 │                                                                      │
    │   356 │   def connect(self):                                                 │
    │   357 │   │   # Add certificate verification                                 │
    │ ❱ 358 │   │   self.sock = conn = self._new_conn()                            │
    │   359 │   │   hostname = self.host                                           │
    │   360 │   │   tls_in_tls = False                                             │
    │   361                                                                        │
    │                                                                              │
    │ ╭─────────────────────────────── locals ───────────────────────────────╮     │
    │ │ self = <urllib3.connection.HTTPSConnection object at 0x7ff7ed158e80> │     │
    │ ╰──────────────────────────────────────────────────────────────────────╯     │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connection.py:186 in _new_conn                │
    │                                                                              │
    │   183 │   │   │   )                                                          │
    │   184 │   │                                                                  │
    │   185 │   │   except SocketError as e:                                       │
    │ ❱ 186 │   │   │   raise NewConnectionError(                                  │
    │   187 │   │   │   │   self, "Failed to establish a new connection: %s" % e   │
    │   188 │   │   │   )                                                          │
    │   189                                                                        │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ extra_kw = {'socket_options': [(6, 1, 1)]}                               │ │
    │ │     self = <urllib3.connection.HTTPSConnection object at 0x7ff7ed158e80> │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    ╰──────────────────────────────────────────────────────────────────────────────╯
    NewConnectionError: <urllib3.connection.HTTPSConnection object at 
    0x7ff7ed158e80>: Failed to establish a new connection: [Errno -3] Temporary 
    failure in name resolution
    
    During handling of the above exception, another exception occurred:
    
    ╭───────────────────── Traceback (most recent call last) ──────────────────────╮
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/adapters.py:440 in send                     │
    │                                                                              │
    │   437 │   │                                                                  │
    │   438 │   │   try:                                                           │
    │   439 │   │   │   if not chunked:                                            │
    │ ❱ 440 │   │   │   │   resp = conn.urlopen(                                   │
    │   441 │   │   │   │   │   method=request.method,                             │
    │   442 │   │   │   │   │   url=url,                                           │
    │   443 │   │   │   │   │   body=request.body,                                 │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │    cert = None                                                           │ │
    │ │ chunked = False                                                          │ │
    │ │    conn = <urllib3.connectionpool.HTTPSConnectionPool object at          │ │
    │ │           0x7ff7ed158cd0>                                                │ │
    │ │ proxies = OrderedDict()                                                  │ │
    │ │ request = <PreparedRequest [GET]>                                        │ │
    │ │    self = <requests.adapters.HTTPAdapter object at 0x7ff7ed158130>       │ │
    │ │  stream = False                                                          │ │
    │ │ timeout = Timeout(connect=None, read=None, total=None)                   │ │
    │ │     url = '/api/v2/tailnet/sylvorg.github/devices?fields=all'            │ │
    │ │  verify = True                                                           │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/connectionpool.py:785 in urlopen              │
    │                                                                              │
    │    782 │   │   │   elif isinstance(e, (SocketError, HTTPException)):         │
    │    783 │   │   │   │   e = ProtocolError("Connection aborted.", e)           │
    │    784 │   │   │                                                             │
    │ ❱  785 │   │   │   retries = retries.increment(                              │
    │    786 │   │   │   │   method, url, error=e, _pool=self, _stacktrace=sys.exc │
    │    787 │   │   │   )                                                         │
    │    788 │   │   │   retries.sleep()                                           │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ _is_ssl_error_message_from_http_pr… <function                            │ │
    │ │                                   = HTTPConnectionPool.urlopen.<locals>… │ │
    │ │                                     at 0x7ff7ed13e4d0>                   │ │
    │ │                  assert_same_host = False                                │ │
    │ │                              body = None                                 │ │
    │ │                          body_pos = None                                 │ │
    │ │                           chunked = False                                │ │
    │ │                        clean_exit = False                                │ │
    │ │                              conn = None                                 │ │
    │ │                destination_scheme = None                                 │ │
    │ │                               err = None                                 │ │
    │ │                           headers = {'User-Agent':                       │ │
    │ │                                     'python-requests/2.27.1',            │ │
    │ │                                     'Accept-Encoding': 'gzip, deflate,   │ │
    │ │                                     br', 'Accept': '*/*', 'Connection':  │ │
    │ │                                     'keep-alive', 'Authorization':       │ │
    │ │                                     'Basic                               │ │
    │ │                                     dHNrZXkta0hVU1ZuNkNOVFJMLTNDTlNOdmk… │ │
    │ │              http_tunnel_required = False                                │ │
    │ │                 is_new_proxy_conn = False                                │ │
    │ │                            method = 'GET'                                │ │
    │ │                        parsed_url = Url(                                 │ │
    │ │                                     │   scheme=None,                     │ │
    │ │                                     │   auth=None,                       │ │
    │ │                                     │   host=None,                       │ │
    │ │                                     │   port=None,                       │ │
    │ │                                     │                                    │ │
    │ │                                     path='/api/v2/tailnet/sylvorg.githu… │ │
    │ │                                     │   query='fields=all',              │ │
    │ │                                     │   fragment=None                    │ │
    │ │                                     )                                    │ │
    │ │                      pool_timeout = None                                 │ │
    │ │                          redirect = False                                │ │
    │ │                      release_conn = False                                │ │
    │ │                 release_this_conn = True                                 │ │
    │ │                       response_kw = {                                    │ │
    │ │                                     │   'preload_content': False,        │ │
    │ │                                     │   'decode_content': False          │ │
    │ │                                     }                                    │ │
    │ │                           retries = Retry(total=0, connect=None,         │ │
    │ │                                     read=False, redirect=None,           │ │
    │ │                                     status=None)                         │ │
    │ │                              self = <urllib3.connectionpool.HTTPSConnec… │ │
    │ │                                     object at 0x7ff7ed158cd0>            │ │
    │ │                           timeout = Timeout(connect=None, read=None,     │ │
    │ │                                     total=None)                          │ │
    │ │                       timeout_obj = Timeout(connect=None, read=None,     │ │
    │ │                                     total=None)                          │ │
    │ │                               url = '/api/v2/tailnet/sylvorg.github/dev… │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/p2mxycc1wphf51pvs2rr5h9g68ww75j7-python3.10-urllib3-1.26.9/lib/py │
    │ thon3.10/site-packages/urllib3/util/retry.py:592 in increment                │
    │                                                                              │
    │   589 │   │   )                                                              │
    │   590 │   │                                                                  │
    │   591 │   │   if new_retry.is_exhausted():                                   │
    │ ❱ 592 │   │   │   raise MaxRetryError(_pool, url, error or ResponseError(cau │
    │   593 │   │                                                                  │
    │   594 │   │   log.debug("Incremented Retry for (url='%s'): %r", url, new_ret │
    │   595                                                                        │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │             _pool = <urllib3.connectionpool.HTTPSConnectionPool object   │ │
    │ │                     at 0x7ff7ed158cd0>                                   │ │
    │ │       _stacktrace = <traceback object at 0x7ff7ed377c40>                 │ │
    │ │             cause = 'unknown'                                            │ │
    │ │           connect = None                                                 │ │
    │ │             error = NewConnectionError('<urllib3.connection.HTTPSConnec… │ │
    │ │                     object at 0x7ff7ed158e80>: Failed to establish a new │ │
    │ │                     connection: [Errno -3] Temporary failure in name     │ │
    │ │                     resolution')                                         │ │
    │ │           history = (                                                    │ │
    │ │                     │   RequestHistory(                                  │ │
    │ │                     │   │   method='GET',                                │ │
    │ │                     │   │                                                │ │
    │ │                     url='/api/v2/tailnet/sylvorg.github/devices?fields=… │ │
    │ │                     │   │                                                │ │
    │ │                     error=NewConnectionError('<urllib3.connection.HTTPS… │ │
    │ │                     object at 0x7ff7ed158e80>: Failed to establish a new │ │
    │ │                     connection: [Errno -3] Temporary failure in name     │ │
    │ │                     resolution'),                                        │ │
    │ │                     │   │   status=None,                                 │ │
    │ │                     │   │   redirect_location=None                       │ │
    │ │                     │   ),                                               │ │
    │ │                     )                                                    │ │
    │ │            method = 'GET'                                                │ │
    │ │         new_retry = Retry(total=-1, connect=None, read=False,            │ │
    │ │                     redirect=None, status=None)                          │ │
    │ │             other = None                                                 │ │
    │ │              read = False                                                │ │
    │ │          redirect = None                                                 │ │
    │ │ redirect_location = None                                                 │ │
    │ │          response = None                                                 │ │
    │ │              self = Retry(total=0, connect=None, read=False,             │ │
    │ │                     redirect=None, status=None)                          │ │
    │ │            status = None                                                 │ │
    │ │      status_count = None                                                 │ │
    │ │             total = -1                                                   │ │
    │ │               url = '/api/v2/tailnet/sylvorg.github/devices?fields=all'  │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    ╰──────────────────────────────────────────────────────────────────────────────╯
    MaxRetryError: HTTPSConnectionPool(host='api.tailscale.com', port=443): Max 
    retries exceeded with url: /api/v2/tailnet/sylvorg.github/devices?fields=all 
    (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 
    0x7ff7ed158e80>: Failed to establish a new connection: [Errno -3] Temporary 
    failure in name resolution'))
    
    During handling of the above exception, another exception occurred:
    
    ╭───────────────────── Traceback (most recent call last) ──────────────────────╮
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:760 in <module>                                                         │
    │                                                                              │
    │   757 │   │   │   ctx.obj.cls.create_key(data, just_key)                     │
    │   758                                                                        │
    │   759 if __name__ == '__main__':                                             │
    │ ❱ 760 │   tailapi(obj=Dict(dict()))                                          │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │      __annotations__ = {}                                                │ │
    │ │         __builtins__ = <module 'builtins' (built-in)>                    │ │
    │ │           __cached__ = None                                              │ │
    │ │              __doc__ = None                                              │ │
    │ │             __file__ = '/nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tai… │ │
    │ │           __loader__ = <_frozen_importlib_external.SourceFileLoader      │ │
    │ │                        object at 0x7ff7eeae18a0>                         │ │
    │ │             __name__ = '__main__'                                        │ │
    │ │          __package__ = None                                              │ │
    │ │             __spec__ = None                                              │ │
    │ │        and_or_values = <function and_or_values at 0x7ff7ed087a30>        │ │
    │ │                  ast = <module 'ast' from                                │ │
    │ │                        '/nix/store/40n9pd613v8fc3x39yjrgs1i7d4q8yl0-pyt… │ │
    │ │                click = <module 'click' from                              │ │
    │ │                        '/nix/store/6sacd815x466al0kyggyihqrmkf8z16h-pyt… │ │
    │ │               create = <Command create>                                  │ │
    │ │               delete = <Command delete>                                  │ │
    │ │         device_class = <class '__main__.device_class'>                   │ │
    │ │                 Dict = <class 'addict.addict.Dict'>                      │ │
    │ │                   dk = <class '__main__.dk'>                             │ │
    │ │              environ = environ({                                         │ │
    │ │                        │   'SHELL': '/run/current-system/sw/bin/zsh',    │ │
    │ │                        │   'SESSION_MANAGER':                            │ │
    │ │                        'local/sandshrew:@/tmp/.ICE-unix/2982,unix/sands… │ │
    │ │                        │   '__ETC_PROFILE_DONE': '1',                    │ │
    │ │                        │   'COLORTERM': 'yes',                           │ │
    │ │                        │   'XDG_CONFIG_DIRS':                            │ │
    │ │                        '/etc/xdg:/home/shadowrylander/.nix-profile/etc/… │ │
    │ │                        │   'LESS': ' -R ',                               │ │
    │ │                        │   'HISTCONTROL': 'ignoreboth:erasedups',        │ │
    │ │                        │   'XDG_MENU_PREFIX': 'gnome-',                  │ │
    │ │                        │   'PYTHONNOUSERSITE': 'true',                   │ │
    │ │                        │   'HOSTNAME': 'sandshrew',                      │ │
    │ │                        │   ... +74                                       │ │
    │ │                        })                                                │ │
    │ │               exists = <function exists at 0x7ff7eeb36b00>               │ │
    │ │                 exit = <built-in function exit>                          │ │
    │ │               filter = <Command filter>                                  │ │
    │ │            functools = <module 'functools' from                          │ │
    │ │                        '/nix/store/40n9pd613v8fc3x39yjrgs1i7d4q8yl0-pyt… │ │
    │ │                  get = <Command get>                                     │ │
    │ │                Group = <class '__main__.Group'>                          │ │
    │ │        HTTPBasicAuth = <class 'requests.auth.HTTPBasicAuth'>             │ │
    │ │          intersperse = <function intersperse at 0x7ff7ee941fc0>          │ │
    │ │                   ip = <Command ip>                                      │ │
    │ │           ip_address = <function ip_address at 0x7ff7ee9c3760>           │ │
    │ │                 json = <module 'json' from                               │ │
    │ │                        '/nix/store/40n9pd613v8fc3x39yjrgs1i7d4q8yl0-pyt… │ │
    │ │            key_class = <class '__main__.key_class'>                      │ │
    │ │                 oreo = <module 'oreo' from                               │ │
    │ │                        '/nix/store/8bbs7g05gmafynilpkixnimkh798yg7a-pyt… │ │
    │ │                 Path = <class 'pathlib.Path'>                            │ │
    │ │               pprint = <function pprint at 0x7ff7ed6c25f0>               │ │
    │ │                print = <function print at 0x7ff7edb05510>                │ │
    │ │ raise_response_error = <function raise_response_error at 0x7ff7eec23910> │ │
    │ │             requests = <module 'requests' from                           │ │
    │ │                        '/nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-pyt… │ │
    │ │   return_json_addict = <function return_json_addict at 0x7ff7ed3a7400>   │ │
    │ │                 show = <Command show>                                    │ │
    │ │                 site = <module 'site' from                               │ │
    │ │                        '/nix/store/40n9pd613v8fc3x39yjrgs1i7d4q8yl0-pyt… │ │
    │ │                  sys = <module 'sys' (built-in)>                         │ │
    │ │              tailapi = <Group tailapi>                                   │ │
    │ │          Transformer = <class '__main__.Transformer'>                    │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/core.py:1130 in __call__                           │
    │                                                                              │
    │   1127 │                                                                     │
    │   1128 │   def __call__(self, *args: t.Any, **kwargs: t.Any) -> t.Any:       │
    │   1129 │   │   """Alias for :meth:`main`."""                                 │
    │ ❱ 1130 │   │   return self.main(*args, **kwargs)                             │
    │   1131                                                                       │
    │   1132                                                                       │
    │   1133 class Command(BaseCommand):                                           │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │   args = ()                                                              │ │
    │ │ kwargs = {                                                               │ │
    │ │          │   'obj': {                                                    │ │
    │ │          │   │   'type': 'device',                                       │ │
    │ │          │   │   'cls': <__main__.device_class object at                 │ │
    │ │          0x7ff7ed20d300>,                                                │ │
    │ │          │   │   'dry_run': False,                                       │ │
    │ │          │   │   'verbose': False                                        │ │
    │ │          │   }                                                           │ │
    │ │          }                                                               │ │
    │ │   self = <Group tailapi>                                                 │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/core.py:1055 in main                               │
    │                                                                              │
    │   1052 │   │   try:                                                          │
    │   1053 │   │   │   try:                                                      │
    │   1054 │   │   │   │   with self.make_context(prog_name, args, **extra) as c │
    │ ❱ 1055 │   │   │   │   │   rv = self.invoke(ctx)                             │
    │   1056 │   │   │   │   │   if not standalone_mode:                           │
    │   1057 │   │   │   │   │   │   return rv                                     │
    │   1058 │   │   │   │   │   # it's not safe to `ctx.exit(rv)` here!           │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │                args = ['ip', '-f4']                                      │ │
    │ │        complete_var = None                                               │ │
    │ │                 ctx = <click.core.Context object at 0x7ff7ed8b30a0>      │ │
    │ │               extra = {                                                  │ │
    │ │                       │   'obj': {                                       │ │
    │ │                       │   │   'type': 'device',                          │ │
    │ │                       │   │   'cls': <__main__.device_class object at    │ │
    │ │                       0x7ff7ed20d300>,                                   │ │
    │ │                       │   │   'dry_run': False,                          │ │
    │ │                       │   │   'verbose': False                           │ │
    │ │                       │   }                                              │ │
    │ │                       }                                                  │ │
    │ │           prog_name = 'tailapi'                                          │ │
    │ │                self = <Group tailapi>                                    │ │
    │ │     standalone_mode = True                                               │ │
    │ │ windows_expand_args = True                                               │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/core.py:1657 in invoke                             │
    │                                                                              │
    │   1654 │   │   │   │   super().invoke(ctx)                                   │
    │   1655 │   │   │   │   sub_ctx = cmd.make_context(cmd_name, args, parent=ctx │
    │   1656 │   │   │   │   with sub_ctx:                                         │
    │ ❱ 1657 │   │   │   │   │   return _process_result(sub_ctx.command.invoke(sub │
    │   1658 │   │                                                                 │
    │   1659 │   │   # In chain mode we create the contexts step by step, but afte │
    │   1660 │   │   # base command has been invoked.  Because at that point we do │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │       __class__ = <class 'click.core.MultiCommand'>                      │ │
    │ │ _process_result = <function MultiCommand.invoke.<locals>._process_result │ │
    │ │                   at 0x7ff7ed13ee60>                                     │ │
    │ │            args = []                                                     │ │
    │ │             cmd = <Command ip>                                           │ │
    │ │        cmd_name = 'ip'                                                   │ │
    │ │             ctx = <click.core.Context object at 0x7ff7ed8b30a0>          │ │
    │ │            self = <Group tailapi>                                        │ │
    │ │         sub_ctx = <click.core.Context object at 0x7ff7ed20f370>          │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/core.py:1404 in invoke                             │
    │                                                                              │
    │   1401 │   │   │   echo(style(message, fg="red"), err=True)                  │
    │   1402 │   │                                                                 │
    │   1403 │   │   if self.callback is not None:                                 │
    │ ❱ 1404 │   │   │   return ctx.invoke(self.callback, **ctx.params)            │
    │   1405 │                                                                     │
    │   1406 │   def shell_complete(self, ctx: Context, incomplete: str) -> t.List │
    │   1407 │   │   """Return a list of completions for the incomplete value. Loo │
    │                                                                              │
    │ ╭─────────────────────── locals ───────────────────────╮                     │
    │ │  ctx = <click.core.Context object at 0x7ff7ed20f370> │                     │
    │ │ self = <Command ip>                                  │                     │
    │ ╰──────────────────────────────────────────────────────╯                     │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/core.py:760 in invoke                              │
    │                                                                              │
    │    757 │   │                                                                 │
    │    758 │   │   with augment_usage_errors(__self):                            │
    │    759 │   │   │   with ctx:                                                 │
    │ ❱  760 │   │   │   │   return __callback(*args, **kwargs)                    │
    │    761 │                                                                     │
    │    762 │   def forward(                                                      │
    │    763 │   │   __self, __cmd: "Command", *args: t.Any, **kwargs: t.Any  # no │
    │                                                                              │
    │ ╭────────────────────────────── locals ──────────────────────────────╮       │
    │ │ _Context__callback = <function ip at 0x7ff7ed13f520>               │       │
    │ │     _Context__self = <click.core.Context object at 0x7ff7ed20f370> │       │
    │ │               args = ()                                            │       │
    │ │                ctx = <click.core.Context object at 0x7ff7ed20f370> │       │
    │ │             kwargs = {'first': True, 'ipv4': True, 'ipv6': False}  │       │
    │ ╰────────────────────────────────────────────────────────────────────╯       │
    │                                                                              │
    │ /nix/store/6sacd815x466al0kyggyihqrmkf8z16h-python3.10-click-8.1.3/lib/pytho │
    │ n3.10/site-packages/click/decorators.py:26 in new_func                       │
    │                                                                              │
    │    23 │   """                                                                │
    │    24 │                                                                      │
    │    25 │   def new_func(*args, **kwargs):  # type: ignore                     │
    │ ❱  26 │   │   return f(get_current_context(), *args, **kwargs)               │
    │    27 │                                                                      │
    │    28 │   return update_wrapper(t.cast(F, new_func), f)                      │
    │    29                                                                        │
    │                                                                              │
    │ ╭─────────────────────── locals ────────────────────────╮                    │
    │ │   args = ()                                           │                    │
    │ │      f = <function ip at 0x7ff7ed13f490>              │                    │
    │ │ kwargs = {'first': True, 'ipv4': True, 'ipv6': False} │                    │
    │ ╰───────────────────────────────────────────────────────╯                    │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:302 in ip                                                               │
    │                                                                              │
    │   299 @click.pass_context                                                    │
    │   300 def ip(ctx, ipv4, ipv6, first):                                        │
    │   301 │   both = (ipv4 and ipv6) or ((not ipv4) and (not ipv6))              │
    │ ❱ 302 │   responses = ctx.obj.cls.get_all()                                  │
    │   303 │   ips = Dict(dict())                                                 │
    │   304 │   for dk, v in responses.items():                                    │
    │   305 │   │   ipvs = [ ip_address(i) for i in v.addresses ]                  │
    │                                                                              │
    │ ╭─────────────────────── locals ────────────────────────╮                    │
    │ │  both = False                                         │                    │
    │ │   ctx = <click.core.Context object at 0x7ff7ed20f370> │                    │
    │ │ first = True                                          │                    │
    │ │  ipv4 = True                                          │                    │
    │ │  ipv6 = False                                         │                    │
    │ ╰───────────────────────────────────────────────────────╯                    │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:72 in get_all                                                           │
    │                                                                              │
    │    69 │   │   else:                                                          │
    │    70 │   │   │   all_responses = Dict(dict())                               │
    │    71 │   │   │   for file in self.response_files:                           │
    │ ❱  72 │   │   │   │   all_responses.update(self.get(file))                   │
    │    73 │   │   │   return all_responses                                       │
    │    74 │                                                                      │
    │    75 │   def print(self):                                                   │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │      all_override = False                                                │ │
    │ │     all_responses = {}                                                   │ │
    │ │              file = '/home/shadowrylander/.local/share/tailapi/devices/… │ │
    │ │ recreate_override = False                                                │ │
    │ │              self = <__main__.device_class object at 0x7ff7ed20d300>     │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:51 in get                                                               │
    │                                                                              │
    │    48 │                                                                      │
    │    49 │   def get(self, response_file, all_override = False, recreate_overri │
    │    50 │   │   if self.recreate_response or recreate_override:                │
    │ ❱  51 │   │   │   responses = self.write(all_override = all_override)        │
    │    52 │   │   elif exists(response_file):                                    │
    │    53 │   │   │   with open(response_file) as f:                             │
    │    54 │   │   │   │   responses = Dict(json.load(f))                         │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │      all_override = False                                                │ │
    │ │ recreate_override = False                                                │ │
    │ │     response_file = '/home/shadowrylander/.local/share/tailapi/devices/… │ │
    │ │              self = <__main__.device_class object at 0x7ff7ed20d300>     │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:129 in write                                                            │
    │                                                                              │
    │   126 │   │   │   │   │   )                                                  │
    │   127 │   │   │   │   │   all_responses.update(self._write(file, { response[ │
    │   128 │   │   │   │   else:                                                  │
    │ ❱ 129 │   │   │   │   │   self.all_responses = self.all_responses or self.ge │
    │   130 │   │   │   │   │   all_responses.update(self._write(file, { device :  │
    │   131 │   │   return all_responses                                           │
    │   132                                                                        │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │  all_override = False                                                    │ │
    │ │ all_responses = {}                                                       │ │
    │ │        device = 'sandshrew'                                              │ │
    │ │          file = '/home/shadowrylander/.local/share/tailapi/devices/sand… │ │
    │ │          self = <__main__.device_class object at 0x7ff7ed20d300>         │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:68 in get_all                                                           │
    │                                                                              │
    │    65 │                                                                      │
    │    66 │   def get_all(self, all_override = False, recreate_override = False) │
    │    67 │   │   if self.all or all_override:                                   │
    │ ❱  68 │   │   │   return self.get(self.default_response_file, all_override = │
    │    69 │   │   else:                                                          │
    │    70 │   │   │   all_responses = Dict(dict())                               │
    │    71 │   │   │   for file in self.response_files:                           │
    │                                                                              │
    │ ╭─────────────────────────────── locals ───────────────────────────────╮     │
    │ │      all_override = True                                             │     │
    │ │ recreate_override = False                                            │     │
    │ │              self = <__main__.device_class object at 0x7ff7ed20d300> │     │
    │ ╰──────────────────────────────────────────────────────────────────────╯     │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:51 in get                                                               │
    │                                                                              │
    │    48 │                                                                      │
    │    49 │   def get(self, response_file, all_override = False, recreate_overri │
    │    50 │   │   if self.recreate_response or recreate_override:                │
    │ ❱  51 │   │   │   responses = self.write(all_override = all_override)        │
    │    52 │   │   elif exists(response_file):                                    │
    │    53 │   │   │   with open(response_file) as f:                             │
    │    54 │   │   │   │   responses = Dict(json.load(f))                         │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │      all_override = True                                                 │ │
    │ │ recreate_override = False                                                │ │
    │ │     response_file = '/home/shadowrylander/.local/share/tailapi/devices.… │ │
    │ │              self = <__main__.device_class object at 0x7ff7ed20d300>     │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:113 in write                                                            │
    │                                                                              │
    │   110 │   def write(self, all_override = False):                             │
    │   111 │   │   if self.all or all_override:                                   │
    │   112 │   │   │   all_responses = Dict({                                     │
    │ ❱ 113 │   │   │   │   device["name"].split(".")[0] : device for device in se │
    │   114 │   │   │   │   │   f"https://api.tailscale.com/api/v2/tailnet/{self.d │
    │   115 │   │   │   │   │   f'Sorry; something happened when trying to get all │
    │   116 │   │   │   │   )["devices"]                                           │
    │                                                                              │
    │ ╭──────────────────────────── locals ─────────────────────────────╮          │
    │ │ all_override = True                                             │          │
    │ │         self = <__main__.device_class object at 0x7ff7ed20d300> │          │
    │ ╰─────────────────────────────────────────────────────────────────╯          │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:39 in get_response                                                      │
    │                                                                              │
    │    36 │   │   self.excluded = excluded                                       │
    │    37 │                                                                      │
    │    38 │   def get_response(self, url, error_message):                        │
    │ ❱  39 │   │   return return_json_addict("get", error_message, url, auth = se │
    │    40 │                                                                      │
    │    41 │   def _write(self, response_file, response_dict):                    │
    │    42 │   │   response_path = Path(response_file)                            │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ error_message = 'Sorry; something happened when trying to get all        │ │
    │ │                 devices!'                                                │ │
    │ │          self = <__main__.device_class object at 0x7ff7ed20d300>         │ │
    │ │           url = 'https://api.tailscale.com/api/v2/tailnet/sylvorg.githu… │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/d1k2n3gpm4mjzqx6sk4mzwqb99mqyv33-tailapi-1.0.0.0/bin/.tailapi-wra │
    │ pped:24 in return_json_addict                                                │
    │                                                                              │
    │    21 │   raise ValueError(error_message + " Response reason: " + response.r │
    │    22                                                                        │
    │    23 def return_json_addict(action, error_message, *args, **kwargs):        │
    │ ❱  24 │   if (response := getattr(requests, action)(*args, **kwargs)).status │
    │    25 │   │   return Dict(json.loads(response.text))                         │
    │    26 │   else:                                                              │
    │    27 │   │   raise_response_error(error_message, response)                  │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │        action = 'get'                                                    │ │
    │ │          args = (                                                        │ │
    │ │                 │                                                        │ │
    │ │                 'https://api.tailscale.com/api/v2/tailnet/sylvorg.githu… │ │
    │ │                 )                                                        │ │
    │ │ error_message = 'Sorry; something happened when trying to get all        │ │
    │ │                 devices!'                                                │ │
    │ │        kwargs = {                                                        │ │
    │ │                 │   'auth': <requests.auth.HTTPBasicAuth object at       │ │
    │ │                 0x7ff7ed20dbd0>                                          │ │
    │ │                 }                                                        │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/api.py:75 in get                            │
    │                                                                              │
    │    72 │   :rtype: requests.Response                                          │
    │    73 │   """                                                                │
    │    74 │                                                                      │
    │ ❱  75 │   return request('get', url, params=params, **kwargs)                │
    │    76                                                                        │
    │    77                                                                        │
    │    78 def options(url, **kwargs):                                            │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ kwargs = {                                                               │ │
    │ │          │   'auth': <requests.auth.HTTPBasicAuth object at              │ │
    │ │          0x7ff7ed20dbd0>                                                 │ │
    │ │          }                                                               │ │
    │ │ params = None                                                            │ │
    │ │    url = 'https://api.tailscale.com/api/v2/tailnet/sylvorg.github/devic… │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/api.py:61 in request                        │
    │                                                                              │
    │    58 │   # avoid leaving sockets open which can trigger a ResourceWarning i │
    │    59 │   # cases, and look like a memory leak in others.                    │
    │    60 │   with sessions.Session() as session:                                │
    │ ❱  61 │   │   return session.request(method=method, url=url, **kwargs)       │
    │    62                                                                        │
    │    63                                                                        │
    │    64 def get(url, params=None, **kwargs):                                   │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │  kwargs = {                                                              │ │
    │ │           │   'params': None,                                            │ │
    │ │           │   'auth': <requests.auth.HTTPBasicAuth object at             │ │
    │ │           0x7ff7ed20dbd0>                                                │ │
    │ │           }                                                              │ │
    │ │  method = 'get'                                                          │ │
    │ │ session = <requests.sessions.Session object at 0x7ff7ed20db40>           │ │
    │ │     url = 'https://api.tailscale.com/api/v2/tailnet/sylvorg.github/devi… │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/sessions.py:529 in request                  │
    │                                                                              │
    │   526 │   │   │   'allow_redirects': allow_redirects,                        │
    │   527 │   │   }                                                              │
    │   528 │   │   send_kwargs.update(settings)                                   │
    │ ❱ 529 │   │   resp = self.send(prep, **send_kwargs)                          │
    │   530 │   │                                                                  │
    │   531 │   │   return resp                                                    │
    │   532                                                                        │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │ allow_redirects = True                                                   │ │
    │ │            auth = <requests.auth.HTTPBasicAuth object at 0x7ff7ed20dbd0> │ │
    │ │            cert = None                                                   │ │
    │ │         cookies = None                                                   │ │
    │ │            data = None                                                   │ │
    │ │           files = None                                                   │ │
    │ │         headers = None                                                   │ │
    │ │           hooks = None                                                   │ │
    │ │            json = None                                                   │ │
    │ │          method = 'get'                                                  │ │
    │ │          params = None                                                   │ │
    │ │            prep = <PreparedRequest [GET]>                                │ │
    │ │         proxies = {}                                                     │ │
    │ │             req = <Request [GET]>                                        │ │
    │ │            self = <requests.sessions.Session object at 0x7ff7ed20db40>   │ │
    │ │     send_kwargs = {                                                      │ │
    │ │                   │   'timeout': None,                                   │ │
    │ │                   │   'allow_redirects': True,                           │ │
    │ │                   │   'verify': True,                                    │ │
    │ │                   │   'proxies': OrderedDict(),                          │ │
    │ │                   │   'stream': False,                                   │ │
    │ │                   │   'cert': None                                       │ │
    │ │                   }                                                      │ │
    │ │        settings = {                                                      │ │
    │ │                   │   'verify': True,                                    │ │
    │ │                   │   'proxies': OrderedDict(),                          │ │
    │ │                   │   'stream': False,                                   │ │
    │ │                   │   'cert': None                                       │ │
    │ │                   }                                                      │ │
    │ │          stream = None                                                   │ │
    │ │         timeout = None                                                   │ │
    │ │             url = 'https://api.tailscale.com/api/v2/tailnet/sylvorg.git… │ │
    │ │          verify = None                                                   │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/sessions.py:645 in send                     │
    │                                                                              │
    │   642 │   │   start = preferred_clock()                                      │
    │   643 │   │                                                                  │
    │   644 │   │   # Send the request                                             │
    │ ❱ 645 │   │   r = adapter.send(request, **kwargs)                            │
    │   646 │   │                                                                  │
    │   647 │   │   # Total elapsed time of the request (approximately)            │
    │   648 │   │   elapsed = preferred_clock() - start                            │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │         adapter = <requests.adapters.HTTPAdapter object at               │ │
    │ │                   0x7ff7ed158130>                                        │ │
    │ │ allow_redirects = True                                                   │ │
    │ │           hooks = {'response': []}                                       │ │
    │ │          kwargs = {                                                      │ │
    │ │                   │   'timeout': None,                                   │ │
    │ │                   │   'verify': True,                                    │ │
    │ │                   │   'proxies': OrderedDict(),                          │ │
    │ │                   │   'stream': False,                                   │ │
    │ │                   │   'cert': None                                       │ │
    │ │                   }                                                      │ │
    │ │         request = <PreparedRequest [GET]>                                │ │
    │ │            self = <requests.sessions.Session object at 0x7ff7ed20db40>   │ │
    │ │           start = 1654991542.160329                                      │ │
    │ │          stream = False                                                  │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    │                                                                              │
    │ /nix/store/anl4n25czryhlp9gl8mrb0qfhqihwlxi-python3.10-requests-2.27.1/lib/p │
    │ ython3.10/site-packages/requests/adapters.py:519 in send                     │
    │                                                                              │
    │   516 │   │   │   │   # This branch is for urllib3 v1.22 and later.          │
    │   517 │   │   │   │   raise SSLError(e, request=request)                     │
    │   518 │   │   │                                                              │
    │ ❱ 519 │   │   │   raise ConnectionError(e, request=request)                  │
    │   520 │   │                                                                  │
    │   521 │   │   except ClosedPoolError as e:                                   │
    │   522 │   │   │   raise ConnectionError(e, request=request)                  │
    │                                                                              │
    │ ╭───────────────────────────────── locals ─────────────────────────────────╮ │
    │ │    cert = None                                                           │ │
    │ │ chunked = False                                                          │ │
    │ │    conn = <urllib3.connectionpool.HTTPSConnectionPool object at          │ │
    │ │           0x7ff7ed158cd0>                                                │ │
    │ │ proxies = OrderedDict()                                                  │ │
    │ │ request = <PreparedRequest [GET]>                                        │ │
    │ │    self = <requests.adapters.HTTPAdapter object at 0x7ff7ed158130>       │ │
    │ │  stream = False                                                          │ │
    │ │ timeout = Timeout(connect=None, read=None, total=None)                   │ │
    │ │     url = '/api/v2/tailnet/sylvorg.github/devices?fields=all'            │ │
    │ │  verify = True                                                           │ │
    │ ╰──────────────────────────────────────────────────────────────────────────╯ │
    ╰──────────────────────────────────────────────────────────────────────────────╯
    ConnectionError: HTTPSConnectionPool(host='api.tailscale.com', port=443): Max 
    retries exceeded with url: /api/v2/tailnet/sylvorg.github/devices?fields=all 
    (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 
    0x7ff7ed158e80>: Failed to establish a new connection: [Errno -3] Temporary 
    failure in name resolution'))
            Gateways:
                - sandshrew.magic
                - sandshrew.tailscale.4
                - sandshrew.tailscale.6
                - sandshrew.tailapi.4
                - sandshrew.tailapi.6
                - sandshrew.dns
                - direct
                - sandshrew.local.hostname
                - argus

        murasame:
            HostName: 
            Gateways:
                - murasame.magic
                - murasame.tailscale.4
                - murasame.tailscale.6
                - murasame.tailapi.4
                - murasame.tailapi.6
                - murasame.dns
                - direct
                - murasame.local.hostname
                - argus
